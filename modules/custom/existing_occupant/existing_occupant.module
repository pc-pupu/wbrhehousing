<?php

	function existing_occupant_init() {
		drupal_add_library('system','ui.datepicker');
		
		drupal_add_css(drupal_get_path('module', 'common_application') . '/css/select2.min.css');
		drupal_add_js(drupal_get_path('module', 'common_application') . '/js/select2.min.js');
		
	}
	
	function existing_occupant_menu() {
		$items = array();
		
	//menu for sub-division user
		$items['rhewise_flatlist'] = array(
	  		'title' => 'Data Entry For Existing Occupant',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('rhewise_flatlist_form'),
	  		'file' => 'include/rhewise_flatlist_page.inc',
	  		'access arguments' => array('administer Existing Occupant'),
		);

			/*    dg 07-05-2025   */

		$items['rhewise_flatlist_draft'] = array(
			'title' => 'Data Entry For Existing Occupant Without HRMS ID',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('rhewise_flatlist_draft_form'),
			'file' => 'include/rhewise_flatlist_page_draft.inc',
			'access arguments' => array('administer Existing Occupant'),
	  	);

	  		/* end */
		
		/*$items['rhewise_occupant_data_entry/%/%'] = array(
			'title'=>'Flatwise Occupant Data Entry',
			'page callback'=>'drupal_get_form',
			'page arguments'=>array('existing_occupant_form',1,2),
			'file' => 'include/existing_occupant_form.inc',
			'access arguments' => array('administer Existing Occupant'),
			//'access callback'=>TRUE
		);*/
		
		$items['rhewise_occupant_data_entry/%'] = array(
			'title'=>'Existing Occupant Data Entry',
			'page callback'=>'drupal_get_form',
			'page arguments'=>array('existing_occupant_form',1),
			'file' => 'include/existing_occupant_form.inc',
			'access arguments' => array('administer Existing Occupant'),
			//'access callback'=>TRUE
		);

		/* dg 08-05-2025 */
		$items['rhewise_occupant_draft_data_entry/%'] = array(
			'title'=>'Existing Occupant Data Entry without HRMS ID',
			'page callback'=>'drupal_get_form',
			'page arguments'=>array('existing_occupant_draft_form',1),
			'file' => 'include/existing_occupant_draft_form.inc',
			'access arguments' => array('administer Existing Occupant'),
			//'access callback'=>TRUE
		);
		/* end */

		$items['rhewise_occupant_draft_list'] = array(
			'title' => 'Existing Occupant List Without HRMS ID',
			'page callback'=>'rhewise_occupant_draft_list',
			//'page arguments'=> array('rhewise_occupant_draft_list_form'),
			'file' => 'include/rhewise_occupant_draft_list.inc',
			'access arguments' => array('administer Existing Occupant Draft List')
			// 'access arguments' => array('administer Existing Occupant List')
		);

		//menu for division user
		$items['rhewise_occupantlist'] = array(
	  		'title' => 'Occupant List',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('rhewise_occupantlist_form'),
	  		'file' => 'include/rhewise_occupantlist_page.inc',
	  		'access arguments' => array('administer Existing Occupant List'),
		);
		
		$items['occupant_detail/%'] = array(
			'title' => 'View Occupant Detail',	
			'page callback' => 'view_occupant_detail_page',
			'page arguments' => array(1),
			'access arguments' => array('administer Existing Occupant List'),
		);
		
		$items['occupant_detail_pdf/%/%'] = array(
			'page callback' => 'occupant_detail_pdf_gen',
			'page arguments' => array(1,2),
			'file' => 'include/occupant_detail_pdf_gen.inc',
			'access arguments' => array('administer Existing Occupant List'),
			'access callback' => TRUE,
		);

		/*Done by Subham*/
		$items['view-occupant-list'] = array(
			'title' => 'Existing Occupant List',
			'page callback' => 'view_occupant_list_form',
			'page arguments' => array(),
			'access arguments' => array('access content')
		);

		$items['view-unauthorised-occupants'] = array(
			'title' => 'Unauthorised Occupant List',
			'page callback' => 'view_unauthorised_occupants_list',
			'file' => 'include/view_unauthorised_occupants_list.inc',
			'access arguments' => array('administer Unauthorised Occupant List')
		);
		
		$items['view-unauthorised-occupants-store/%'] = array(
			'page callback' => 'unauthorised_occupants_list_store',
			'page arguments' => array(1),
			'file' => 'include/view_unauthorised_occupants_list.inc',
			'access arguments' => array('administer Unauthorised Occupant List')
		);

		$items['existing-occupant-view-det/%'] = array(
			'title' => 'View Existing Occupant Details',	
			'page callback' => 'existing_occupant_view_details',
			'page arguments' => array(1),
			//'file' => 'include/view_unauthorised_occupants_list.inc',
			'access arguments' => array('access content')
		);
		$items['existing-occupant-view-det-draft/%'] = array(
			'title' => 'View Existing Occupant Details without HRMS ID',	
			'page callback' => 'existing_occupant_view_details_draft',
			'page arguments' => array(1),
			//'file' => 'include/view_unauthorised_occupants_list.inc',
			'access arguments' => array('access content')
		);

		// added on 21-05-2025 by moumita
		$items['rhe-wise-flat-occupant-delete'] = array(
			'title' => 'RHE Wise Flat List',
			'page callback' => 'rhe_wise_flat_occupant_delete',
			'page arguments' => array(1,2,3),
			// 'file' => 'include/rhewise_occupant_draft_list.inc',
			'access arguments' => array('administer RHE wise flat list Master'),
		);

		return $items;
	}
	
	
	function view_occupant_detail_page($online_app_id = '') {
		$online_app_id = decrypt_url($online_app_id);
		//die($app_id);
		$output = array();
		if(is_numeric($online_app_id) && $online_app_id > 0) {
			$output[] = true;
			$output[] = $online_app_id;
		}
		return theme('view_occupant_detail_template', array('output' => $output));
	}
	
	function existing_occupant_theme() {
	
		return array(
			'view_occupant_detail_template' => array(
				'variables' => array('output' => NULL),
				// file name will be custom-page.tpl.php
				'template' => 'view_occupant_detail',
			),
		);
	}
	
	
	function existing_occupant_permission() {
		return array(
			'administer Existing Occupant' => array(
				'title' => t('Administer Existing Occupant'),
				'description' => t('Perform Administer Existing Occupant Data Entry.'),
			),
			
			'administer Existing Occupant List' => array(
				'title' => t('Administer Existing Occupant List'),
				'description' => t('Perform Administer Existing Occupant List Verification and Approval.'),
			),

			'administer Unauthorised Occupant List' => array(
				'title' => t('Administer Unauthorised Occupant List'),
				'description' => t('Perform Administer to see unauthorised occupant list.'),
			),
			
			'administer Existing Occupant Draft List' => array(
				'title' => t('Administer Existing Occupant Draft List View'),
				'description' => t('Perform Administer to see existing occupant draft list.'),
			),
		);	
	}
	
	function occupant_entry_check($flat_id = '') {
		if($flat_id != 0) {
			$query = db_select('housing_flat_occupant', 'hfo');
			$query->addField('hfo', 'flat_id');
			$query->addField('hfo', 'online_application_id');
			$query->condition('hfo.flat_id', $flat_id, '=');
			return $query->execute();		
		}
	}

	function occupant_entry_check_draft($flat_id = ''){
		if($flat_id != 0) {
			$query = db_select('housing_existing_occupant_draft', 'heod');
			$query->addField('heod', 'flat_id');
			$query->addField('heod', 'applicant_name');
			$query->condition('heod.flat_id', $flat_id, '=');
			return $query->execute();		
		}
	}
	
	function get_occupant_rhe_details($flat_id = '') {
		if($flat_id !== '' && is_numeric($flat_id)) {	
			$query = db_select('housing_flat', 'hf');
			$query->innerJoin('housing_estate', 'he','he.estate_id = hf.estate_id');
			$query->innerJoin('housing_district', 'hd','he.district_code = hd.district_code');
			$query->innerJoin('housing_block', 'hb', 'hb.block_id = hf.block_id');
			$query->innerJoin('housing_flat_status', 'hfs','hfs.flat_status_id = hf.flat_status_id');
			$query->innerJoin('housing_flat_type', 'hft','hft.flat_type_id = hf.flat_type_id');
			$query->addField('hf', 'flat_id');
			$query->addField('hf', 'flat_no');
			$query->addField('hf', 'estate_id');
			$query->addField('hf', 'flat_type_id');
			$query->addField('hf', 'block_id');
			$query->addField('hf', 'floor');
			$query->addField('hf', 'flat_status_id');
			$query->addField('he', 'estate_name');
			$query->addField('he', 'estate_address');
			$query->addField('hd', 'district_name');
			$query->addField('hb', 'block_name');	
			$query->addField('hfs', 'flat_status');
			$query->addField('hft', 'flat_type');
			$query->condition('hf.flat_id', $flat_id, '=');
			return $query->execute();
		}
	}

	function flat_type_under_rhe($rhe_name = '') {
		$flat_type_options = array('' => '- Select -');
		if($rhe_name !== '' && is_numeric($rhe_name)) {
			$query = db_select('housing_flat', 'hf');
			$query->innerJoin('housing_flat_type', 'hft', 'hft.flat_type_id = hf.flat_type_id');
			$query->addField('hf', 'flat_type_id');	
			$query->addField('hft', 'flat_type');
			$query->condition('hf.estate_id', $rhe_name, '=');
			$query->groupBy('hf.flat_type_id');
			$query->groupBy('hft.flat_type');
			$query->orderBy('hft.flat_type', 'ASC');
			$result = $query->execute();
			
			if($result->rowCount() > 0) {
				foreach($result as $val) {
					$flat_type_options[$val->flat_type_id] = $val->flat_type;
				}
				return $flat_type_options;
			} else {
				$flat_type_options[''] = 'No Data Found';
				return $flat_type_options;		
			}
		}
	}
	
	function block_name_under_rhe($rhe_name = '', $flat_type = '') {
		$block_name_options = array('' => '- Select -');
		if(($rhe_name !== '' && $flat_type !== '') && (is_numeric($rhe_name) && is_numeric($flat_type))) {
			$query = db_select('housing_flat', 'hf');
			$query->innerJoin('housing_block', 'hb', 'hb.block_id = hf.block_id');
			$query->addField('hf', 'block_id');	
			$query->addField('hb', 'block_name');
			$db_and = db_and();
			$db_and->condition('hf.estate_id', $rhe_name, '=');
			$db_and->condition('hf.flat_type_id', $flat_type, '=');
			$query->condition($db_and);
			$query->groupBy('hf.block_id');
			$query->groupBy('hb.block_name');
			$query->orderBy('hb.block_name', 'ASC');
			$result = $query->execute();
			
			if($result->rowCount() > 0) {
				foreach($result as $val) {
					$block_name_options[$val->block_id] = $val->block_name;
				}
				return $block_name_options;
			} else {
				$block_name_options[''] = 'No Data Found';
				return $block_name_options;		
			}
		}
	}
	
	function flatno_under_rhe($rhe_name = '', $flat_type = '', $block_name = '') {
		$flat_no_options = array('' => '- Select -');
		if($rhe_name !== '' && $flat_type !== '' && $block_name !== '' && is_numeric($rhe_name) && is_numeric($flat_type) && is_numeric($block_name)) {
			$query = db_select('housing_flat', 'hf');
			$query->leftJoin('housing_flat_occupant', 'hfo', 'hf.flat_id = hfo.flat_id');
			$query->addField('hf', 'flat_id');
			$query->addField('hf', 'flat_no');
			$db_and = db_and();
			$db_and->condition('hf.estate_id', $rhe_name, '=');
			$db_and->condition('hf.flat_type_id', $flat_type, '=');
			$db_and->condition('hf.block_id', $block_name, '=');
			$db_and->condition('hfo.flat_id', NULL, 'is');
			$query->condition($db_and);
			$query->orderBy('flat_id', 'ASC');
			$result = $query->execute();
			
			if($result->rowCount() > 0) {
				foreach($result as $val) {
					$flat_no_options[$val->flat_id] = $val->flat_no;
				}
				return $flat_no_options;
			} else {
				$flat_no_options[''] = 'No Data Found';
				return $flat_no_options;		
			}
		}
	}
	
	function rhe_flattype_wise_occupantlist_for_update($rhe_name = '', $flat_type = '') {
		
		if($rhe_name != 0 && $flat_type != 0) {
			$query = db_select('users', 'u');
			$query->innerJoin('users_roles', 'ur', 'u.uid = ur.uid');
			$query->innerJoin('housing_applicant', 'ha', 'u.uid = ha.uid');
			$query->innerJoin('housing_applicant_official_detail', 'haod', 'u.uid = haod.uid');
			$query->innerJoin('housing_online_application', 'hoa', 'haod.applicant_official_detail_id = hoa.applicant_official_detail_id');
			$query->innerJoin('housing_new_allotment_application', 'hnaa', 'hoa.online_application_id = hnaa.online_application_id');
			$query->innerJoin('housing_flat_occupant', 'hfo', 'hoa.online_application_id = hfo.online_application_id');
			$query->innerJoin('housing_flat', 'hf', 'hfo.flat_id = hf.flat_id');
			$query->innerJoin('housing_estate', 'he', 'hf.estate_id = he.estate_id');
			$query->innerJoin('housing_district', 'hd', 'hd.district_code = he.district_code');
			$query->innerJoin('housing_block', 'hb', 'hf.block_id = hb.block_id');
			$query->innerJoin('housing_flat_status', 'hfs', 'hf.flat_status_id = hfs.flat_status_id');
			$query->innerJoin('housing_flat_type', 'hft', 'hf.flat_type_id = hft.flat_type_id');
			$query->fields('u');
			$query->addField('u', 'status', 'user_status');
			$query->fields('ur');
			$query->fields('ha');
			$query->fields('haod');
			$query->fields('hoa');
			$query->fields('hnaa');
			$query->fields('hfo');
			$query->addField('hf', 'flat_id');
			$query->addField('hf', 'flat_no');
			$query->addField('hf', 'estate_id');
			$query->addField('hf', 'flat_type_id');
			$query->addField('hf', 'block_id');
			$query->addField('hf', 'floor');
			$query->addField('hf', 'flat_status_id');
			$query->addField('he', 'estate_name');
			$query->addField('he', 'estate_address');
			$query->addField('hd', 'district_name');
			$query->addField('hb', 'block_name');	
			$query->addField('hfs', 'flat_status');
			$query->addField('hfs', 'is_occupied');
			$query->addField('hft', 'flat_type');
			$db_and = db_and();
			$db_and->condition('u.status', 0, '=');
			$db_and->condition('ur.rid', 5, '=');
			// $db_and->condition('hoa.status', 'allotted', '=');
			$db_and->condition('hoa.status', 'existing_occupant', '=');
			$db_and->condition('hoa.is_backlog_applicant', 2, '=');
			$db_and->condition('hf.estate_id', $rhe_name, '=');
			$db_and->condition('hf.flat_type_id', $flat_type, '=');
			$query->condition($db_and);
			$query->orderBy('hf.flat_id', 'ASC');
			//$query = $query->extend('PagerDefault')->limit(5);
			//$query = $query->extend('TableSort')->extend('PagerDefault')->limit(5);
			
			// echo $query;
			return $query->execute();	
		}
	}
	
	
	/* fetch pay band*/ 
	 function pay_band_list_specific($flat_type = '') {
		
		$pay_band_options = array(''=>'- Select -');
		$query = db_select('housing_pay_band', 'hpb')->fields('hpb')->orderBy('scale_from', 'ASC');
		$query->condition('flat_type_id', $flat_type, '=');
		$result = $query->execute();
		foreach($result as $val) {
			if($val->scale_from == 0 && $val->scale_to != 0) {
				$str =  $val->payband.' (Up to Rs '.$val->scale_to.'/-)';
			}
			else if($val->scale_from != 0 && $val->scale_to == 0) {
				if($val->grade_pay_from == 0 && $val->grade_pay_to != 0) {
					$str =  $val->payband.' (Rs '.$val->scale_from.'/- and above & GP Up to Rs. '.$val->grade_pay_to.'/-)';
				}
				else if($val->grade_pay_from != 0 && $val->grade_pay_to == 0) {
					$str =  $val->payband.' (Rs '.$val->scale_from.'/- and above & GP Rs. '.$val->grade_pay_from.'/- and above)';
				}
				//$str =  $val->payband.' (Rs '.$val->scale_from.'/- and above)';
			}
			else {
				$str = $val->payband.' (Rs '.$val->scale_from.'/- to Rs '.$val->scale_to.'/-)';
			}
			
			$pay_band_options[$val->pay_band_id] = $str;
		}
		
		return $pay_band_options;
	}
	
	/*fetch specific RHE */
  	function rhe_list_specific() {
		global $user;
		$rhe_options = array(''=>'- Select -');
		
		$query1 = db_select('users_details', 'ud');
		$query1->fields('ud');
		$query1->condition('uid',$user->uid,'=');
		$result1 = $query1->execute();
		$data1 = $result1->fetchObject();
		
		if($data1->division_id != '' && $data1->subdiv_id != '') {
			if($data1->subdiv_id != 0) {
				$query = db_select('housing_estate', 'he');
				$query->fields('he');
				$db_and = db_and();
				$db_and->condition('he.division_id', $data1->division_id, '=');
				$db_and->condition('he.subdiv_id', $data1->subdiv_id, '=');
				$query->condition($db_and);
				$query->orderBy('estate_name','ASC');
				$result = $query->execute();	
			} else {
				$query = db_select('housing_estate', 'he');
				$query->fields('he');
				$query->condition('he.division_id', $data1->division_id, '=');
				$query->orderBy('estate_name','ASC');
				$result = $query->execute();	
			}
		}
		
		foreach($result as $val) {
			$str = $val->estate_name;
			if($val->estate_address != null){
				$str = $str.' | '.$val->estate_address;
			}
			$rhe_options[$val->estate_id] = $str;
		}
		
		return $rhe_options;
	}
	
	
	function fetch_occupant_details($online_app_id = '') {
		if($online_app_id != 0) {
			$query = db_select('users', 'u');
			$query->innerJoin('users_roles', 'ur', 'ur.uid = u.uid');
			$query->innerJoin('housing_applicant', 'ha', 'ha.uid = u.uid');
			$query->innerJoin('housing_applicant_official_detail', 'haod', 'haod.uid = u.uid');
			//$query->innerJoin('housing_pay_band', 'hpb', 'hpb.pay_band_id = haod.pay_band_id');
			$query->innerJoin('housing_pay_band_categories', 'hpbc', 'hpbc.pay_band_id = haod.pay_band_id'); //debaleena 29-08-2024
			$query->innerJoin('housing_ddo', 'hddo', 'hddo.ddo_id = haod.ddo_id');
			$query->innerJoin('housing_district', 'hd', 'hd.district_code = hddo.district_code');
			$query->innerJoin('housing_online_application', 'hoa', 'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
			$query->innerJoin('housing_new_allotment_application', 'hnaa', 'hnaa.online_application_id = hoa.online_application_id');
			$query->innerJoin('housing_flat_occupant', 'hfo', 'hfo.online_application_id = hoa.online_application_id');
			$query->innerJoin('housing_flat_type', 'hft', 'hft.flat_type_id = hnaa.flat_type_id');
			$query->fields('u');
			$query->addField('u', 'status', 'user_status');
			$query->fields('ur');
			$query->fields('ha');
			$query->fields('haod');
			$query->fields('hpbc');
			$query->fields('hddo');
			$query->fields('hd');
			$query->fields('hoa');
			$query->fields('hnaa');
			$query->fields('hfo');
			$query->addField('hft','flat_type');
			$db_and = db_and();
			$db_and->condition('hoa.online_application_id', $online_app_id, '=');
			$db_and->condition('ur.rid', 5, '=');
			$db_and->condition('hoa.is_backlog_applicant', 2, '=');
			// $db_and->condition('hoa.status', 'allotted', '=');
			$db_and->condition('hoa.status', 'existing_occupant', '=');
			$query->condition($db_and);
			$query->orderBy('u.uid', 'ASC');
			return $query->execute();		
		}	
	}
	
	function fetch_hrms_details($hrms_id = '') {
		//die($hrms_id);
		
	//for custom hrms table
		/*if($hrms_id != '') {
			$query = db_select('hrms_info', 'hi');	
			$query->fields('hi');
			$query->condition('hi.hrms_id', $hrms_id, '=');
			return $query->execute();
		}*/
		
		//off on 09-01-2019
		
	//for api
		/*if($hrms_id != '') {
			$url= 'http://pbgsbs.gov.in/pms/testapi/website_miscellaneous/aiworker_details';
			$fields = array('aiworkerId' => $hrms_id);
			$Curl_Session = curl_init();
			
			curl_setopt($Curl_Session, CURLOPT_URL, $url); 
			curl_setopt($Curl_Session, CURLOPT_POST, 1);
			curl_setopt($Curl_Session, CURLOPT_SSL_VERIFYPEER, false);
			curl_setopt($Curl_Session, CURLOPT_POSTFIELDS, http_build_query($fields));
			curl_setopt($Curl_Session, CURLOPT_RETURNTRANSFER, 1);
			//curl_setopt($Curl_Session,CURLOPT_CONNECTTIMEOUT, 0);
			
			
			curl_setopt($Curl_Session, CURLOPT_URL, $url);
			curl_setopt($Curl_Session, CURLOPT_HEADER, 0);
			curl_setopt($Curl_Session, CURLOPT_POST, 1);
			curl_setopt($Curl_Session, CURLOPT_POSTFIELDS, $fields);
			curl_setopt($Curl_Session, CURLOPT_RETURNTRANSFER, true);
			curl_setopt($Curl_Session, CURLOPT_SSL_VERIFYPEER, false);
			curl_setopt($Curl_Session, CURLOPT_SSL_VERIFYHOST, 2);
			
			
			//Get the Output(Here as Json)
			$content = curl_exec($Curl_Session);
			$header = curl_getinfo($Curl_Session);
			
			curl_exec($Curl_Session);
			if(curl_error($Curl_Session)) {
				$error_msg = curl_error($Curl_Session);
			}
			curl_close($Curl_Session);
			
			if(isset($error_msg)) {
				// TODO - Handle cURL error accordingly
				die($error_msg);
			}
			
			return json_decode($content,true);
		}*/
	}
	
	function check_hrms_id_entry($hrms_id = '') {
		if($hrms_id != '') {
			$query = db_select('housing_applicant_official_detail', 'haod');	
			$query->fields('haod');
			$query->condition('haod.hrms_id', $hrms_id, '=');
			return $query->execute();
		}
	}

	/*Done by Subham*/
	function view_occupant_list_form() {  
		global $base_root, $base_path,$user,$user_role;
		$output = '';

			/* Done by Subham 30-12-2024*/
			$query_dtls = db_select('users_details', 'ud'); 
			$query_dtls->fields('ud');
			$query_dtls->condition('uid',$user->uid,'=');
			$rsult = $query_dtls->execute();
			$data_fetch = $rsult->fetchObject();
			/* End */

			if($data_fetch->division_id != '' && $data_fetch->subdiv_id != '') { // Added by Subham 30-12-2024
				if($data_fetch->subdiv_id != 0) {								// Added by Subham 30-12-2024
					$query = db_select('housing_applicant', 'ha');

					// $query->innerJoin('housing_applicant_official_detail', 'haod', 'ha.uid = haod.uid');  //off by dg 30-12-2024
					$query->innerJoin('housing_applicant_official_detail', 'haod', 'ha.housing_applicant_id = haod.housing_applicant_id');  //added by dg 30-12-2024 
					$query->innerJoin('housing_online_application', 'hoa', 'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
					$query->innerJoin('housing_flat_occupant', 'hfo', 'hfo.online_application_id = hoa.online_application_id');
					$query->innerJoin('housing_flat', 'hf', 'hf.flat_id = hfo.flat_id');
					$query->innerJoin('housing_estate', 'he', 'he.estate_id = hf.estate_id');
					$query->innerJoin('housing_flat_type', 'hft', 'hft.flat_type_id = hf.flat_type_id');
					$query->innerJoin('users', 'u', 'u.uid = haod.uid');
					// $query->leftJoin('users', 'u', 'u.uid = haod.uid');

					$query->condition('hoa.status', 'existing_occupant', '=');
					// $query->condition('haod.is_active', 1, '=');

					$query->addField('ha', 'applicant_name');
					$query->addField('he', 'estate_name');
					$query->addField('hft', 'flat_type');
					$query->addField('haod', 'hrms_id');
					$query->addField('u', 'status');
					$query->addField('haod', 'uid');
					$query->addField('hf', 'flat_id');

					$db_and = db_and();														// Added by Subham 30-12-2024
					$db_and->condition('he.division_id', $data_fetch->division_id, '=');	// Added by Subham 30-12-2024
					$db_and->condition('he.subdiv_id', $data_fetch->subdiv_id, '=');		// Added by Subham 30-12-2024
					$query->condition($db_and);												// Added by Subham 30-12-2024

					$result =$query->execute();

				} else{																		// Added by Subham 30-12-2024
					$query = db_select('housing_applicant', 'ha');

					// $query->innerJoin('housing_applicant_official_detail', 'haod', 'ha.uid = haod.uid');  //off by dg 30-12-2024
					$query->innerJoin('housing_applicant_official_detail', 'haod', 'ha.housing_applicant_id = haod.housing_applicant_id');  //added by dg 30-12-2024 
					$query->innerJoin('housing_online_application', 'hoa', 'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
					$query->innerJoin('housing_flat_occupant', 'hfo', 'hfo.online_application_id = hoa.online_application_id');
					$query->innerJoin('housing_flat', 'hf', 'hf.flat_id = hfo.flat_id');
					$query->innerJoin('housing_estate', 'he', 'he.estate_id = hf.estate_id');
					$query->innerJoin('housing_flat_type', 'hft', 'hft.flat_type_id = hf.flat_type_id');
					$query->innerJoin('users', 'u', 'u.uid = haod.uid');
					
					$query->condition('hoa.status', 'existing_occupant', '=');
					// $query->condition('haod.is_active', 1, '=');

					$query->addField('ha', 'applicant_name');
					$query->addField('he', 'estate_name');
					$query->addField('hft', 'flat_type');
					$query->addField('haod', 'hrms_id');
					$query->addField('u', 'status');
					$query->addField('haod', 'uid');
					$query->addField('hf', 'flat_id');

					$query->condition('he.division_id', $data_fetch->division_id, '=');		// Added by Subham 30-12-2024
					$result =$query->execute();
				}
			}
			

			$header['Serial No.'] = array('data' => 'Serial No.');
			$header['Applicant Name'] = array('data' => 'Applicant Name');
			$header['HRMS Code'] = array('data' => 'HRMS Code');
			$header['Estate Name'] = array('data' => 'Estate Name');
			$header['Flat Type'] = array('data' => 'Flat Type');
			$header['Approval Status'] = array('data' => 'Approval Status');
			$header['Details'] = array('data' => 'Details');
			$header['Details'] = array('data' => 'Details');
			// Added 22-05-2025
			if($user_role == 8){
				$header['Action'] = array('data' => 'Action');
			}

			$rows =array();
			$output = '';
			$serialNumber = 1;
		
		while($data = $result->fetchObject()) {
			$fields = array();
      
			$fields[] = $serialNumber;
			$fields[] = $data->applicant_name;
			$fields[] = $data->hrms_id;
			$fields[] = $data->estate_name;
			$fields[] = $data->flat_type;
			if($data->status == 0){
				$fields[] = 'Pending Approval at Division Level';
			}else{
				$fields[] = 'Approved by Division';
			}
			$fields[] = l(
            'View Details',
            'existing-occupant-view-det/'. encrypt_url($data->uid),
            array(
                'html'=>TRUE,
                'attributes'=> array('class'=>array('btn bg-success btn-sm px-4 rounded-pill text-white fw-bolder')),
            ));
			// Added 22-05-2025
			if($user_role == 8){
				/*Added by Moumita 21-05-2025  ~~~~~~ Flat id added in link by Subham dt.22-05-2025*/
				$fields[] = l('<i class="fa fa-trash"></i> Delete', 'rhe-wise-flat-occupant-delete/draft/'.encrypt_url($data->housing_existing_occupant_draft_id).'/'.encrypt_url($data->flat_id), array('html' => true, 'attributes' => array('class' => array('btn btn-sm bg-primary px-3 rounded-pill text-white fw-bolder'))));	
				/*end*/	
			}
			$serialNumber++;

			$rows[] = $fields;
			
		}

		$variables = array(
			'attributes' => array('class'=>array('table table-list table-striped')),
			'header' => $header,
			'rows' => $rows,
			'sticky' => true,
			'empty' => t("No data found!") // The message to be displayed if table is empty
		  );
  		//end

		if(count($rows) > 0) {
			// Render using Drupal's render API.
			$build['datatable'] = array(
			  '#theme' => 'datatable',
			  '#header' => $header,
			  '#rows' => $rows,
			  '#attributes' => array(),
			);
			
			// Or, render using a theme function.
			$variables = array(
			  'attributes' => array('class'=>array('table table-list table-striped')),
			  'header' => $header,
			  'rows' => $rows,
			);
			
			$output = theme('datatable', $variables);
		}
		else {
			$output = '<div>
							<table class="datatable_no_data_found table table-list">
								<tr class="tr_no_data_found">
									<th class="th_no_data_found"></th>
								</tr>
								<tr class="tr_no_data_found">
									<td class="td_no_data_found">No data found!</td>
								</tr>
							</table>
						</div>';
		}
	
		return $output;
	}


	function existing_occupant_view_details($uid = ''){

		global $base_root, $base_path,$user;
		$uid = decrypt_url($uid);
		
		$query = db_select('housing_applicant', 'ha');
		$query->innerJoin('housing_applicant_official_detail', 'haod', 'ha.housing_applicant_id = haod.housing_applicant_id');  //added by dg 30-12-2024 
		$query->innerJoin('housing_online_application', 'hoa', 'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_flat_occupant', 'hfo', 'hfo.online_application_id = hoa.online_application_id');
		$query->innerJoin('housing_flat', 'hf', 'hf.flat_id = hfo.flat_id');
		$query->innerJoin('housing_estate', 'he', 'he.estate_id = hf.estate_id');
		$query->innerJoin('housing_flat_type', 'hft', 'hft.flat_type_id = hf.flat_type_id');
		$query->innerJoin('users', 'u', 'u.uid = haod.uid');
		$query->innerJoin('housing_ddo', 'hd', 'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_district', 'hdis', 'hdis.district_code = hd.district_code');
		$query->innerJoin('housing_occupant_license', 'hol', 'hol.flat_occupant_id = hfo.flat_occupant_id');
		$query->innerJoin('housing_block', 'hb', 'hb.block_id = hf.block_id');
		$query->innerJoin('housing_district', 'hdis_present', 'hdis_present.district_code = ha.present_district');
		$query->innerJoin('housing_district', 'hdis_permanent', 'hdis_permanent.district_code = ha.permanent_district');
		$query->innerJoin('housing_district', 'hdis_office', 'hdis_office.district_code = haod.office_district');

		$query->condition('hoa.status', 'existing_occupant', '=');
		$query->condition('haod.uid',$uid);

		$query->fields('ha', array('applicant_name','applicant_name','guardian_name','date_of_birth','mobile_no','gender','permanent_street','permanent_city_town_village','permanent_post_office','permanent_pincode','permanent_district','permanent_present_same','present_street','present_city_town_village','present_post_office','present_pincode','present_district'));
		$query->addField('he', 'estate_name');
		$query->addField('hft', 'flat_type');
		$query->fields('haod', array('hrms_id','applicant_designation','applicant_headquarter','applicant_posting_place','pay_in_the_pay_band','date_of_joining','date_of_retirement','office_name','office_street','office_city_town_village','office_post_office','office_pin_code','office_district','office_phone_no'));
		$query->addField('u', 'status');
		$query->fields('hoa', array('application_no', 'date_of_application'));
		$query->fields('hd', array('ddo_designation', 'ddo_address'));
		$query->addField('hdis', 'district_name');
		$query->fields('hol', array('license_issue_date', 'license_expiry_date','existing_occupant_license_no','authorised_or_not'));
		$query->addField('hf', 'flat_no');
		$query->addField('hf', 'floor');
		$query->addField('he', 'estate_name');
		$query->addField('hft', 'flat_type');
		$query->addField('hb', 'block_name');
		$query->addField('u', 'mail');
		$query->addField('hdis_present', 'district_name', 'present_district_name');
		$query->addField('hdis_permanent', 'district_name', 'permanent_district_name');
		$query->addField('hdis_office', 'district_name', 'office_district_name');

		$result =$query->execute();
		$data = $result->fetchObject();
		//print_r($data);die;

		$present_address_parts = array_filter([
			$data->present_street ?? '',
			$data->present_city_town_village ?? '',
			$data->present_post_office ? 'P.O- ' . $data->present_post_office : '',
			$data->present_district_name ?? '',
			$data->present_pincode ? '-' . $data->present_pincode : '',
		]);

		$present_address = !empty($present_address_parts) ? implode(', ', $present_address_parts) : 'Not Available';

		$permanent_address_parts = array_filter([
			$data->permanent_street ?? '',
			$data->permanent_city_town_village ?? '',
			$data->permanent_post_office ? 'P.O- ' . $data->permanent_post_office : '',
			$data->permanent_district_name ?? '',
			$data->permanent_pincode ? '-' . $data->permanent_pincode : '',
		]);
		
		$permanent_address = !empty($permanent_address_parts) ? implode(', ', $permanent_address_parts) : 'Not Available';
		
		$office_address_parts = array_filter([
			$data->office_street ?? '',
			$data->office_city_town_village ?? '',
			$data->office_post_office ? 'P.O- ' . $data->office_post_office : '',
			$data->office_district_name ?? '',
			$data->office_pin_code ? '-' . $data->office_pin_code : '',
		]);
		
		$office_address = !empty($office_address_parts) ? implode(', ', $office_address_parts) : 'Not Available';


		$display_output1 = '
		    <div class="table-bottom">
		        <table class="table table-list">
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Application Information</th>
		          </tr>
		           <tr>
		            <th style="background-color:#00000000" width="50%">Application Number:</th>
		            <td width="50%">Application for Existing Occupant</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000" width="50%">Application Number:</th>
		            <td width="50%">'.(isset($data->application_no) ? $data->application_no : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Date of Application:</th>
		            <td>'.(isset($data->date_of_application) ? $data->date_of_application : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Applicant Personal Information (According to Service Book)</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Applicant\'s Name:</th>
		            <td>'.(isset($data->applicant_name) ? $data->applicant_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Father'.'s/ Husband'.'s Name:</th>
		            <td>'.(isset($data->guardian_name) ? $data->guardian_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Present Address</th>
		            <td>'.$present_address.'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Parmanent Address</th>
		            <td>'.$permanent_address.'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Gender:</th>
		            <td>'.(isset($data->gender) ? $data->gender : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Date of Birth(According to Service Book):</th>
		            <td>'.(isset($data->date_of_birth) ? $data->date_of_birth : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Mobile No:</th>
		            <td>'.(isset($data->mobile_no) ? $data->mobile_no : 'Not Avalaible').'</td>
		          </tr><tr>
		            <th style="background-color:#00000000">Email ID:</th>
		            <td>'.(isset($data->mail) ? $data->mail : 'Not Avalaible').'</td>
		          </tr>
		          

		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Applicant Official Information</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Employee HRMS ID:</th>
		            <td>'.(isset($data->hrms_id) ? $data->hrms_id : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Designation:</th>
		            <td>'.(isset($data->applicant_designation) ? $data->applicant_designation : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Office Headquarter:</th>
		            <td>'.(isset($data->applicant_headquarter) ? $data->applicant_headquarter : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Place of Posting:</th>
		            <td>'.(isset($data->applicant_posting_place) ? $data->applicant_posting_place : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Basic Pay:</th>
		            <td>'.(isset($data->pay_in_the_pay_band) ? $data->pay_in_the_pay_band : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Date of Joining:</th>
		            <td>'.(isset($data->date_of_joining) ? $data->date_of_joining : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Date of Retirement(According to Service Book):</th>
		            <td>'.(isset($data->date_of_retirement) ? $data->date_of_retirement : 'Not Avalaible').'</td>
		          </tr>

		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Applicant Office Name and Address</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Name of the Office:</th>
		            <td>'.(isset($data->office_name) ? $data->office_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Office Address:</th>
		            <td>'.$office_address.'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Office Phone No.:</th>
		            <td>'.(isset($data->office_phone_no) ? $data->office_phone_no : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Applicant Office Name and Address</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">DDO District.:</th>
		            <td>'.(isset($data->district_name) ? $data->district_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">DDO Designation:</th>
		            <td>'.(isset($data->ddo_designation) ? $data->ddo_designation : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">DDO Address :</th>
		            <td>'.(isset($data->ddo_address) ? $data->ddo_address : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Information for Allotment</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Estate Name:</th>
		            <td>'.(isset($data->he_estate_name) ? $data->he_estate_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Bloack Name:</th>
		            <td>'.(isset($data->block_name) ? $data->block_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Flat Type:</th>
		            <td>'.(isset($data->hft_flat_type) ? $data->hft_flat_type : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Flat No.:</th>
		            <td>'.(isset($data->flat_no) ? $data->flat_no : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Floor:</th>
		            <td>'.(isset($data->floor) ? $data->floor : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Information for License</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">License No :</th>
		            <td>'.(isset($data->existing_occupant_license_no) ? $data->existing_occupant_license_no : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">License Issue Date :</th>
		            <td>'.(isset($data->license_issue_date) ? $data->license_issue_date : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">License Expiry Date :</th>
		            <td>'.(isset($data->license_expiry_date) ? $data->license_expiry_date : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Occupant Status :</th>
		            <td>'.(isset($data->authorised_or_not) ? $data->authorised_or_not : 'Not Avalaible').'</td>
		          </tr>

		          
		        </table>
		    </div>';

    return $display_output1;

	}



	function existing_occupant_view_details_draft($housing_existing_occupant_draft_id = '')
	{
		$housing_existing_occupant_draft_id = decrypt_url($housing_existing_occupant_draft_id);

		$query = db_select('housing_existing_occupant_draft', 'heod');
                    
		$query->innerJoin('housing_flat', 'hf', 'hf.flat_id = heod.flat_id');
		$query->innerJoin('housing_block', 'hb', 'hb.block_id = hf.block_id');
		$query->innerJoin('housing_estate', 'he', 'he.estate_id = hf.estate_id');
		$query->innerJoin('housing_flat_type', 'hft', 'hft.flat_type_id = hf.flat_type_id');
		$query->innerJoin('housing_district', 'hd', 'he.district_code = hd.district_code');

		$query->fields('heod', array('applicant_name','guardian_name','date_of_birth','mobile_no','gender','permanent_street','permanent_city_town_village','permanent_post_office','permanent_pincode','permanent_district','permanent_present_same','present_street','present_city_town_village','present_post_office','present_pincode','present_district','ddo_id','applicant_designation','applicant_headquarter','applicant_posting_place','pay_band_id','pay_in_the_pay_band','date_of_joining','date_of_retirement','office_name','office_street','office_city_town_village','office_post_office','office_pin_code','office_district','office_phone_no','license_no','license_issue_date','authorised_or_not','license_expiry_date'));
		$query->fields('he', array('estate_name', 'estate_address'));
		$query->addField('hft', 'flat_type');
		$query->fields('hf', array('floor', 'flat_no'));
		$query->addField('hd', 'district_name');
		$query->addField('hb', 'block_name');
		$query->addField('heod', 'housing_existing_occupant_draft_id');

		$query->condition('heod.housing_existing_occupant_draft_id', $housing_existing_occupant_draft_id);

		// $db_and = db_and();							
		// $db_and->condition('he.division_id', $data_fetch->division_id, '=');	
		// $db_and->condition('he.subdiv_id', $data_fetch->subdiv_id, '=');		
		// $query->condition($db_and);

		$result =$query->execute();
		$data = $result->fetchObject();

		// print_r($data);die;

		$present_address_parts = array_filter([
			$data->present_street ?? '',
			$data->present_city_town_village ?? '',
			$data->present_post_office ? 'P.O- ' . $data->present_post_office : '',
			$data->present_district_name ?? '',
			$data->present_pincode ? '-' . $data->present_pincode : '',
		]);

		$present_address = !empty($present_address_parts) ? implode(', ', $present_address_parts) : 'Not Available';

		$permanent_address_parts = array_filter([
			$data->permanent_street ?? '',
			$data->permanent_city_town_village ?? '',
			$data->permanent_post_office ? 'P.O- ' . $data->permanent_post_office : '',
			$data->permanent_district_name ?? '',
			$data->permanent_pincode ? '-' . $data->permanent_pincode : '',
		]);
		
		$permanent_address = !empty($permanent_address_parts) ? implode(', ', $permanent_address_parts) : 'Not Available';
		
		$office_address_parts = array_filter([
			$data->office_street ?? '',
			$data->office_city_town_village ?? '',
			$data->office_post_office ? 'P.O- ' . $data->office_post_office : '',
			$data->office_district_name ?? '',
			$data->office_pin_code ? '-' . $data->office_pin_code : '',
		]);
		
		$office_address = !empty($office_address_parts) ? implode(', ', $office_address_parts) : 'Not Available';

		$display_output1 = '
		    <div class="table-bottom">
		        <table class="table table-list">
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Application Information</th>
		          </tr>
		           <tr>
		            <th style="background-color:#00000000" width="50%">Application Number:</th>
		            <td width="50%">Application for Existing Occupant Without HRMS ID</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000" width="50%">Application Number:</th>
		            <td width="50%">'.(isset($data->application_no) ? $data->application_no : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Date of Application:</th>
		            <td>'.(isset($data->date_of_application) ? $data->date_of_application : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Applicant Personal Information (According to Service Book)</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Applicant\'s Name:</th>
		            <td>'.(isset($data->applicant_name) ? $data->applicant_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Father'.'s/ Husband'.'s Name:</th>
		            <td>'.(isset($data->guardian_name) ? $data->guardian_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Present Address</th>
		            <td>'.$present_address.'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Parmanent Address</th>
		            <td>'.$permanent_address.'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Gender:</th>
		            <td>'.(isset($data->gender) ? $data->gender : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Date of Birth(According to Service Book):</th>
		            <td>'.(isset($data->date_of_birth) ? $data->date_of_birth : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Mobile No:</th>
		            <td>'.(isset($data->mobile_no) ? $data->mobile_no : 'Not Avalaible').'</td>
		          </tr><tr>
		            <th style="background-color:#00000000">Email ID:</th>
		            <td>'.(isset($data->mail) ? $data->mail : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Applicant Official Information</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Employee HRMS ID:</th>
		            <td>'.(isset($data->hrms_id) ? $data->hrms_id : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Designation:</th>
		            <td>'.(isset($data->applicant_designation) ? $data->applicant_designation : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Office Headquarter:</th>
		            <td>'.(isset($data->applicant_headquarter) ? $data->applicant_headquarter : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Place of Posting:</th>
		            <td>'.(isset($data->applicant_posting_place) ? $data->applicant_posting_place : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Basic Pay:</th>
		            <td>'.(isset($data->pay_in_the_pay_band) ? $data->pay_in_the_pay_band : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Date of Joining:</th>
		            <td>'.(isset($data->date_of_joining) ? $data->date_of_joining : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Date of Retirement(According to Service Book):</th>
		            <td>'.(isset($data->date_of_retirement) ? $data->date_of_retirement : 'Not Avalaible').'</td>
		          </tr>

		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Applicant Office Name and Address</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Name of the Office:</th>
		            <td>'.(isset($data->office_name) ? $data->office_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Office Address:</th>
		            <td>'.$office_address.'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Office Phone No.:</th>
		            <td>'.(isset($data->office_phone_no) ? $data->office_phone_no : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Applicant Office Name and Address</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">DDO District.:</th>
		            <td>'.(isset($data->district_name) ? $data->district_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">DDO Designation:</th>
		            <td>'.(isset($data->ddo_designation) ? $data->ddo_designation : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">DDO Address :</th>
		            <td>'.(isset($data->ddo_address) ? $data->ddo_address : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Information for Allotment</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Estate Name:</th>
		            <td>'.(isset($data->estate_name) ? $data->estate_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Bloack Name:</th>
		            <td>'.(isset($data->block_name) ? $data->block_name : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Flat Type:</th>
		            <td>'.(isset($data->flat_type) ? $data->flat_type : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Flat No.:</th>
		            <td>'.(isset($data->flat_no) ? $data->flat_no : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Floor:</th>
		            <td>'.(isset($data->floor) ? $data->floor : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th colspan="2" style="background: none repeat scroll 0 0 #473a39;color:white;text-align: center;font-size: 18px;line-height: 24px; font-weight: normal;font-family: "Dosis",Arial,Verdana,serif;" class="first">Information for License</th>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">License No :</th>
		            <td>'.(isset($data->license_no) ? $data->license_no : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">License Issue Date :</th>
		            <td>'.(isset($data->license_issue_date) ? $data->license_issue_date : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">License Expiry Date :</th>
		            <td>'.(isset($data->license_expiry_date) ? $data->license_expiry_date : 'Not Avalaible').'</td>
		          </tr>
		          <tr>
		            <th style="background-color:#00000000">Occupant Status :</th>
		            <td>'.(isset($data->authorised_or_not) ? $data->authorised_or_not : 'Not Avalaible').'</td>
		          </tr>

		          
		        </table>
		    </div>';

    	return $display_output1;

	}

	// Done by Moumita 21-05-2025
	function rhe_wise_flat_occupant_delete($val = '', $occupant_id_enc = '', $flat_id_enc = ''){
	$occupant_id = decrypt_url($occupant_id_enc);
	$flat_id = decrypt_url($flat_id_enc);

	if($val == 'draft'){
		// delete from draft table
		$table_name = 'housing_existing_occupant_draft';
		$field_name = 'housing_existing_occupant_draft_id';
		$row_id = $occupant_id;

		delete_info_from_table($table_name, $field_name, $row_id); // function from update_flat.module
		// Added by Subham dt.22-05-2025
		db_update('housing_flat')
			->fields(array(
						'flat_status_id' => 1
					))
			->condition('flat_id', $flat_id)
			->execute();
		// End
		drupal_set_message('Occupant Data Removed Successfully');
		drupal_goto('rhewise_occupant_draft_list');

	}else{
		// delete from multiple table
		$user_id = $occupant_id; 
		
		delete_info_from_table('housing_applicant', 'uid', $user_id); // function from update_flat.module
		delete_info_from_table('housing_applicant_official_detail', 'uid', $user_id); // function from update_flat.module
		delete_info_from_table('users_roles', 'uid', $user_id); // function from update_flat.module
		delete_info_from_table('users', 'uid', $user_id); // function from update_flat.module
		// Added by Subham dt.22-05-2025
		db_update('housing_flat')
			->fields(array(
						'flat_status_id' => 1
					))
			->condition('flat_id', $flat_id)
			->execute();
		//End
		drupal_set_message('Occupant Data Removed Successfully');
		drupal_goto('view-occupant-list');
		
	}
}