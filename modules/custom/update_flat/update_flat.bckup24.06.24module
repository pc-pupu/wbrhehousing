<?php
	
	function update_flat_init() {
		drupal_add_css(drupal_get_path('module', 'common_application') . '/css/select2.min.css');
		drupal_add_js(drupal_get_path('module', 'common_application') . '/js/select2.min.js');	
	}
	
	function update_flat_menu() {
		$items['update_flat'] = array(
	  		'title' => 'Update RHE Flat Master(Add Flat Data)',	
	  		//'page callback' => 'update_flat_page',
	  		'page callback' => 'drupal_get_form',
	  		'page arguments' => array('update_flat_form'),
	  		'file' => 'view_flat_list_page.inc',
	  		'access arguments' => array('administer RHE flat Master'),
	  		//'access arguments' => array('access content'),
		);
		
		$items['add_block'] = array(
	  		'title' => 'Add RHE Block Name',	
	  		//'page callback' => 'update_flat_page',
	  		'page callback' => 'drupal_get_form',
	  		'page arguments' => array('add_flat_block_form'),
	  		'file' => 'add_flat_block_form.inc',
	  		'access arguments' => array('administer RHE block Master'),
		);
	
		$items['update_flat/edit/%'] = array(
	  		'title' => 'Update RHE Flat Master(Edit Flat Data)',	
	  		'page callback' => 'editFlatList',
	  		'page arguments' => array(2),
	  		'file' => 'view_flat_list_page.inc',
	  		'access arguments' => array('administer RHE flat Master'),
		);
		
		/*$items['flat_list_pdf/%']=array(
			'title' => 'List of Flats PDF',
			'page callback' => 'flat_list_page_pdf',
			'page arguments' => array(1),
			'file' => 'flat_list_page_pdf.inc',
			'access arguments' => array('administer RHE flat Master'),
		);*/
		
		$items['rhe_wise_flat_list'] = array(
	  		'title' => 'RHE Wise Flat List',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('rhe_wise_flat_list_form'),
	  		'file' => 'rhe_wise_flat_list_page.inc',
	  		'access arguments' => array('administer RHE wise flat list Master'),
		);
		
		$items['rhe_wise_flat_list_pdf/%/%'] = array(
			'title' => 'RHE Wise Flat List PDF',
			'page callback' => 'rhe_wise_flat_list_page_pdf',
			'page arguments' => array(1, 2),
			'file' => 'rhe_wise_flat_list_page_pdf.inc',
			'access arguments' => array('administer RHE wise flat list Master'),
		);

		/*Done by Subham*/
		$items['view-occupant-list'] = array(
			'title' => 'RHE wise occupant list',
			'page callback' => 'view_occupant_list_form',
			'page arguments' => array(),
			'access arguments' => array('access content')
		);

		/*DDO Estate Mapping Start*/
	    $items['ddo-estate-mapping-list'] = array(
	        'title' => 'DDO Estate Mapping List',
	        'page callback' => 'fss_price_list_page',
	        'access arguments' => array(
	            'administer ddo estate mapping home'
	        ),
	        'file' => 'ddo_estate_mapping/ddo_estate_mappings_page.inc',
	        'type' => MENU_NORMAL_ITEM
	    );
	    $items['add-ddo-estate-mapping/%ctools_js'] = array(
	        'title' => 'Add DDO Estate Mapping',
	        'page callback' => 'add_fss_price_page',
	        'page arguments' => array(
	            1
	        ),
	        'file' => 'ddo_estate_mapping/add_ddo_estate_mappings_page.inc',
	        'access arguments' => array(
	            'administer add ddo estate mapping'
	        ),
	        //'access callback' => TRUE,
	        'type' => MENU_CALLBACK
	    );

	     $items['view-ddo-estate-mapping/%ctools_js/%'] = array(
	        'title' => 'View DDO Estate Mapping',
	        'page callback' => 'view_fss_price_page',
	        'page arguments' => array(
	            1,
	            2
	        ),
	        'file' => 'ddo_estate_mapping/ddo_estate_mappings_view_page.inc',
	        'access arguments' => array(
	            'administer view ddo estate mapping'
	        ),
	        //'access callback' => TRUE,
	        'type' => MENU_CALLBACK
	    );
	    /*DDO Estate Mapping End*/
		
		return $items;
	}
	
	/*function update_flat_page() {
		$build = array();

		// Render your two forms here.
		$build['form_one'] = drupal_get_form('add_flat_block_form');
		$build['form_two'] = drupal_get_form('update_flat_form');
		
		return $build;
	}*/
	
	function update_flat_form($form, &$form_state) {
		global $user_role;
		
		if($user_role == 7 || $user_role == 8) {
			$form['rhe_name'] = array(
				'#title' => t('Name of the RHE'),
				'#type' => 'select',
				'#options' => rhe_list_specific(),
				'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="two">',
				'#suffix' => '</div>',
				'#select2' => array(
					'width' => '500',
					//'placeholder' => '- Select -',
					'allowClear' => TRUE
				)
			);
		} else {
			$form['rhe_name'] = array(
				'#title' => t('Name of the RHE'),
				'#type' => 'select',
				'#options' => rhe_list(),
				'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="two">',
				'#suffix' => '</div>',
				'#select2' => array(
					'width' => '500',
					//'placeholder' => '- Select -',
					'allowClear' => TRUE
				)
			);	
		}
		
		$form['flat_type'] = array(
			'#title' => t('Flat Type'),
			'#type' => 'select',
			'#options' => rhe_flat_type(),
			'#required' => TRUE,
			'#prefix' => '<div class="two">',
			'#suffix' => '</div>',
		);
		
		$form['rhe_block'] = array(
			'#title' => t('Name of the Block'),
			//'#description' => t('If you don\'t find block name please add it first.'),
			'#type' => 'select',
			'#options' => rhe_block_list(),
			'#required' => TRUE,
			//'#weight' => -10,
			'#prefix' => '<div class="two">',
			'#suffix' => '</div>',
			'#select2' => array(
				'width' => '300',
				//'placeholder' => '- Select -',
				'allowClear' => TRUE
        	)
		);
		
		$form['flat_floor'] = array(
			'#title' => t('Floor No.'),
			'#type' => 'select',
			// '#options' => array('G' => 'Ground', 'F' => 'First', 'S' => 'Second', 'T' => 'Third'),
			'#options' => array('Ground' => 'Ground', 'First' => 'First', 'Second' => 'Second', 'Third' => 'Third','Fourth'=>'Fourth','Fifth'=>'Fifth','Sixth'=>'Sixth','Seventh'=>'Seventh','Eighth'=>'Eighth','Ninth'=>'Ninth','Tenth'=>'Tenth','Top'=>'Top'),
			'#required' => TRUE,
			//'#weight' => -10,
			'#prefix' => '<div class="two">',
			'#suffix' => '</div>',
		);
	  
		$form['flat_no'] = array(
			'#title' => t('Flat No.'),
			'#type' => 'textfield',
			'#default_value' => '',
			'#required' => TRUE,
			'#prefix' => '<div class="three">',
			'#suffix' => '</div>',
			'#element_validate' => array('validate_flat_no'),
			'#attributes' => array('oninput'=>"this.value=this.value.toUpperCase()"),
		);
	  
		$form['flat_status'] = array(
			'#title' => t('Flat Status'),
			'#type' => 'select',
			'#options' => flat_status_list(),
			'#required' => TRUE,
			'#prefix' => '<div class="three">',
			'#suffix' => '</div>',
		);
		
	  	$form['submit'] = array(
			'#value' => t('Add'),
			'#type' => 'submit',
			'#prefix' => '<div class="three" style="padding-top: 42px">',
			'#suffix' => '</div>',
	  	);
		
		$form['#attributes'] = array('onsubmit' => 'return validate_update_flat_form()');
	  	$form['#submit']= array('update_flat_submit');
		
		$form['second_heading'] = array (
			'#markup' => '<h1><font style="color: #5996d9">RHE WISE FLAT LIST FOR EDIT</font></h1>'
		);
		
		
		$rhe_name =  isset($form_state['values']['update_rhe_name']) && !empty($form_state['values']['update_rhe_name']) ? $form_state['values']['update_rhe_name'] : 0;
		$flat_type =  isset($form_state['values']['update_flat_type']) &&!empty($form_state['values']['update_flat_type']) ? $form_state['values']['update_flat_type'] : 0;
		$block_name =  isset($form_state['values']['update_block_name']) &&!empty($form_state['values']['update_block_name']) ? $form_state['values']['update_block_name'] : 0;
		
		if($user_role == 7 || $user_role == 8) {
			$form['update_rhe_name'] = array(
				'#title' => t('Name of the RHE'),
				'#type' => 'select',
				'#options' => rhe_list_specific(),
				//'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="one">',
				'#suffix' => '</div>',
				'#ajax' => array(
					'event' => 'change',
					'callback' => '_reload_rhewise_flat_type_update',
					'method' => 'replace',
				),
				'#select2' => array(
					'width' => '500',
					//'placeholder' => '- Select -',
					'allowClear' => TRUE
				)
			);
		} else {
			$form['update_rhe_name'] = array(
				'#title' => t('Name of the RHE'),
				'#type' => 'select',
				'#options' => rhe_list(),
				//'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="one">',
				'#suffix' => '</div>',
				'#ajax' => array(
					'event' => 'change',
					'callback' => '_reload_rhewise_flat_type_update',
					'method' => 'replace',
				),
				'#select2' => array(
					'width' => '500',
					//'placeholder' => '- Select -',
					'allowClear' => TRUE
				)
			);	
		}
		
		$form['update_flat_type'] = array(
			'#prefix' => '<div class="three" id="flat_type_replace_update">',
			'#suffix' => '</div>',
		);
			
		if($rhe_name != 0) {
			$form['update_flat_type'] = array(
				'#title' => t('Flat Type'),
				'#type' => 'select',
				'#options' => flat_type_under_rhe($rhe_name),
				//'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="three" id="flat_type_replace_update">',
				'#suffix' => '</div>',
				'#attributes' => array('class'	=> array('dropdown3')),
				'#ajax' => array(
					'event' => 'change',
					'callback' => '_reload_rhewise_blocklist_update',
					'method' => 'replace',
				),
			);
		}
		
		$form['update_block_name'] = array(
			'#prefix' => '<div class="three" id="block_name_replace_update">',
			'#suffix' => '</div>',
		);
			
		if($rhe_name != 0 && $flat_type != 0) {
			$form['update_block_name'] = array(
				'#title' => t('Name of the Block'),
				'#type' => 'select',
				'#options' => block_name_under_rhe($rhe_name, $flat_type),
				//'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="three" id="block_name_replace_update">',
				'#suffix' => '</div>',
				'#attributes' => array('class'	=> array('dropdown3')),
				'#ajax' => array(
					'event' => 'change',
					'callback' => '_reload_rhewise_flatlist_update',
					'method' => 'replace',
				),
			);
		}
	  	
		$form['all_list'] = array(
			'#prefix' => '<div style="margin-top:30px;" id="flat_list_replace_update">',
			'#suffix' => '</div>',
		);
		
		if($rhe_name != 0 && $flat_type != 0 && $block_name != 0) {
			$form['all_list'] = array(
				'#type' => 'markup',
				'#markup' => viewFlatList($rhe_name, $flat_type, $block_name),
				'#weight' => 50,
				'#prefix' => '<div style="margin-top:30px;" id="flat_list_replace_update">',
				'#suffix' => '</div>',
			);
		}
		
	  
		return $form;
	}
	
	function editFlatList($edit = '') {
		return drupal_get_form('edit_flat_form',$edit);
	}
	
	function edit_flat_form($form, &$form_state, $id) {
		global $user_role;
		$id = decrypt_url($id);
		$edit = rhe_flat_list_rst_id($id)->fetchObject();
	 
		$form['flat_id'] = array(
			'#type' => 'hidden',
			'#default_value' =>$edit->flat_id ,
			'#weight' => -11,
	  	);
		
	  	if($user_role == 7 || $user_role == 8) {
			$form['rhe_name'] = array(
				'#title' => t('Name of the RHE'),
				'#type' => 'select',
				'#options' => rhe_list_specific(),
				'#required' => TRUE,
				'#default_value' => $edit->estate_id,
				//'#weight' => -10,
				'#prefix' => '<div class="two">',
				'#suffix' => '</div>',
				'#select2' => array(
					'width' => '500',
					//'placeholder' => '- Select -',
					'allowClear' => TRUE
				)
			);
		} else {
			$form['rhe_name'] = array(
				'#title' => t('Name of the RHE'),
				'#type' => 'select',
				'#options' => rhe_list(),
				'#required' => TRUE,
				'#default_value' => $edit->estate_id,
				//'#weight' => -10,
				'#prefix' => '<div class="two">',
				'#suffix' => '</div>',
				'#select2' => array(
					'width' => '500',
					//'placeholder' => '- Select -',
					'allowClear' => TRUE
				)
			);	
		}
		
		$form['flat_type'] = array(
			'#title' => t('Flat Type'),
			'#type' => 'select',
			'#options' => rhe_flat_type(),
			'#default_value' => $edit->flat_type_id,
			'#required' => TRUE,
			'#prefix' => '<div class="two">',
			'#suffix' => '</div>',
	 	 );
		
		$form['rhe_block'] = array(
			'#title' => t('Name of the Block'),
			'#type' => 'select',
			'#options' => rhe_block_list(),
			'#required' => TRUE,
			'#default_value' => $edit->block_id,
			//'#weight' => -10,
			'#prefix' => '<div class="two">',
			'#suffix' => '</div>',
			'#select2' => array(
				'width' => '300',
				//'placeholder' => '- Select -',
				'allowClear' => TRUE
        	)
		);
		
		$form['flat_floor'] = array(
			'#title' => t('Floor No.'),
			'#type' => 'select',
			// '#options' => array('G' => 'Ground', 'F' => 'First', 'S' => 'Second', 'T' => 'Third'),
			'#options' => array('Ground' => 'Ground', 'First' => 'First', 'Second' => 'Second', 'Third' => 'Third','Fourth'=>'Fourth','Fifth'=>'Fifth','Sixth'=>'Sixth','Seventh'=>'Seventh','Eighth'=>'Eighth','Ninth'=>'Ninth','Tenth'=>'Tenth','Top'=>'Top'),
			'#required' => TRUE,
			'#default_value' => $edit->floor,
			//'#weight' => -10,
			'#prefix' => '<div class="two">',
			'#suffix' => '</div>',
		);
	  
	  	$form['flat_no'] = array(
			'#title' => t('Flat no'),
			'#type' => 'textfield',
			'#default_value' => $edit->flat_no,
			'#required' => TRUE,
			'#prefix' => '<div class="three">',
			'#suffix' => '</div>',
			'#element_validate' => array('edit_validate_flat_no'),
			'#attributes' => array('oninput'=>"this.value=this.value.toUpperCase()"),
	  	);
	   	
		$form['flat_status'] = array(
			'#title' => t('Flat Status'),
			'#type' => 'select',
			'#options' => flat_status_list(),
			'#default_value' => $edit->flat_status_id,
			'#required' => TRUE,
			'#prefix' => '<div class="three">',
			'#suffix' => '</div>',
	 	 );
		 
	  	$form['submit'] = array(
			'#value' => t('Update'),
			'#type' => 'submit',
			'#prefix' => '<div class="three" style="padding-top: 42px">',
			'#suffix' => '</div>',
	  	);
		
		$form['#attributes'] = array('onsubmit' => 'return validate_update_flat_form()');
	  	$form['#submit']= array('edit_flat_submit');
		
	  	$options['attributes']['class'] = array('button','small','round','link-button','steel_blue');
	  	$str = l('Add New', 'update_flat',$options);
		
		$form['add_flat'] = array(
			'#type' => 'markup',
			'#markup' => $str.'<br><br>',
			'#prefix' => '<div style="margin-top:20px;">',
			'#suffix' => '</div>',
		);
		
		$form['second_heading'] = array (
			'#markup' => '<h1><font style="color: #5996d9">RHE WISE FLAT LIST FOR EDIT</font></h1>'
		);
		
		$rhe_name =  isset($form_state['values']['update_rhe_name']) && !empty($form_state['values']['update_rhe_name']) ? $form_state['values']['update_rhe_name'] : 0;
		$flat_type =  isset($form_state['values']['update_flat_type']) &&!empty($form_state['values']['update_flat_type']) ? $form_state['values']['update_flat_type'] : 0;
		$block_name =  isset($form_state['values']['update_block_name']) &&!empty($form_state['values']['update_block_name']) ? $form_state['values']['update_block_name'] : 0;
		
		if($user_role == 7 || $user_role == 8) {
			$form['update_rhe_name'] = array(
				'#title' => t('Name of the RHE'),
				'#type' => 'select',
				'#options' => rhe_list_specific(),
				//'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="one">',
				'#suffix' => '</div>',
				'#ajax' => array(
					'event' => 'change',
					'callback' => '_reload_rhewise_flat_type_update',
					'method' => 'replace',
				),
				'#select2' => array(
					'width' => '500',
					//'placeholder' => '- Select -',
					'allowClear' => TRUE
				)
			);
		} else {
			$form['update_rhe_name'] = array(
				'#title' => t('Name of the RHE'),
				'#type' => 'select',
				'#options' => rhe_list(),
				//'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="one">',
				'#suffix' => '</div>',
				'#ajax' => array(
					'event' => 'change',
					'callback' => '_reload_rhewise_flat_type_update',
					'method' => 'replace',
				),
				'#select2' => array(
					'width' => '500',
					//'placeholder' => '- Select -',
					'allowClear' => TRUE
				)
			);	
		}
		
		$form['update_flat_type'] = array(
			'#prefix' => '<div class="three" id="flat_type_replace_update">',
			'#suffix' => '</div>',
		);
			
		if($rhe_name != 0) {
			$form['update_flat_type'] = array(
				'#title' => t('Flat Type'),
				'#type' => 'select',
				'#options' => flat_type_under_rhe($rhe_name),
				//'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="three" id="flat_type_replace_update">',
				'#suffix' => '</div>',
				'#attributes' => array('class'	=> array('dropdown3')),
				'#ajax' => array(
					'event' => 'change',
					'callback' => '_reload_rhewise_blocklist_update',
					'method' => 'replace',
				),
			);
		}
		
		$form['update_block_name'] = array(
			'#prefix' => '<div class="three" id="block_name_replace_update">',
			'#suffix' => '</div>',
		);
			
		if($rhe_name != 0 && $flat_type != 0) {
			$form['update_block_name'] = array(
				'#title' => t('Name of the Block'),
				'#type' => 'select',
				'#options' => block_name_under_rhe($rhe_name, $flat_type),
				//'#required' => TRUE,
				//'#weight' => -10,
				'#prefix' => '<div class="three" id="block_name_replace_update">',
				'#suffix' => '</div>',
				'#attributes' => array('class'	=> array('dropdown3')),
				'#ajax' => array(
					'event' => 'change',
					'callback' => '_reload_rhewise_flatlist_update',
					'method' => 'replace',
				),
			);
		}
	  	
		$form['all_list'] = array(
			'#prefix' => '<div style="margin-top:30px;" id="flat_list_replace_update">',
			'#suffix' => '</div>',
		);
		
		if($rhe_name != 0 && $flat_type != 0 && $block_name != 0) {
			$form['all_list'] = array(
				'#type' => 'markup',
				'#markup' => $str.'</br></br>'.viewFlatList($rhe_name, $flat_type, $block_name),
				'#weight' => 50,
				'#prefix' => '<div style="margin-top:20px;" id="flat_list_replace_update">',
				'#suffix' => '</div>',
			);
		}
		
	  	return $form;
	}
	
	
	
	function update_flat_permission() {
		return array(
			'administer RHE flat Master' => array(
				'title' => t('Administer RHE flat Master'),
				'description' => t('Perform administration tasks for RHE flat Master.'),
			),
			
			'administer RHE block Master' => array(
				'title' => t('Administer RHE block Master'),
				'description' => t('Perform administration tasks for RHE block Master.'),
			),
			
			'administer RHE wise flat list Master' => array(
				'title' => t('Administer RHE wise flat list Master'),
				'description' => t('Perform administration tasks for RHE wise flat list Master.'),
			),

			'administer add ddo estate mapping' => array(
				'title' => t('Administer Add DDO Estate Mapping'),
				'description' => t('Perform administration tasks for Add DDO Estate Mapping.'),
			),

			'administer ddo estate mapping home' => array(
				'title' => t('Administer DDO Estate Mapping Home'),
				'description' => t('Perform administration tasks for DDO Estate Mapping Home.'),
			),
		);
	}
	
	
	function _reload_rhewise_flat_type_update($form, &$form_state) {
		$commands = array();
		$commands[] = ajax_command_replace("#flat_type_replace_update", drupal_render($form['update_flat_type']));
		$commands[] = ajax_command_replace("#block_name_replace_update", drupal_render($form['update_block_name']));
		$commands[] = ajax_command_replace("#flat_list_replace_update", drupal_render($form['all_list']));
		
		return array('#type' => 'ajax', '#commands' => $commands);
	}
	
	function _reload_rhewise_blocklist_update($form, &$form_state) {
		$commands = array();
		$commands[] = ajax_command_replace("#block_name_replace_update", drupal_render($form['update_block_name']));
		$commands[] = ajax_command_replace("#flat_list_replace_update", drupal_render($form['all_list']));
		
		return array('#type' => 'ajax', '#commands' => $commands);
	}
	
	function _reload_rhewise_flatlist_update($form, &$form_state) {
		$commands = array();
		$commands[] = ajax_command_replace("#flat_list_replace_update", drupal_render($form['all_list']));
		
		return array('#type' => 'ajax', '#commands' => $commands);
	}

	/*Done by Subham*/
	function view_occupant_list_form() {
		global $base_root, $base_path;
		$output = '';

		if (db_table_exists('housing_applicant')) {
			$query = db_select('housing_applicant', 'ha');

			$query->innerJoin('housing_applicant_official_detail', 'haod', 'ha.uid = haod.uid');
			$query->innerJoin('housing_online_application', 'hoa', 'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
			$query->innerJoin('housing_flat_occupant', 'hfo', 'hfo.online_application_id = hoa.online_application_id');
			$query->innerJoin('housing_flat', 'hf', 'hf.flat_id = hfo.flat_id');
			$query->innerJoin('housing_estate', 'he', 'he.estate_id = hf.estate_id');
			$query->innerJoin('housing_flat_type', 'hft', 'hft.flat_type_id = hf.flat_type_id');

			$query->condition('hoa.status', 'existing_occupant', '=');

			$query->addField('ha', 'applicant_name');
			$query->addField('he', 'estate_name');
			$query->addField('hft', 'flat_type');
			$result =$query->execute();
			$result = $result->fetchAll();

			if(!empty($result)){
			$output .= '<table>';
			$output .= '<tr><th>Serial No.</th><th>Applicant Name</th><th>Estate Name</th><th>Flat Type</th></tr>';
			$serialNumber = 1;
			foreach ($result as $row) {
				$output .= '<tr>';
				$output .= '<td>' . $serialNumber . '</td>';
				$output .= '<td>' . $row->applicant_name . '</td>';
				$output .= '<td>' . $row->estate_name . '</td>';
				$output .= '<td>' . $row->flat_type . '</td>';
				$output .= '</tr>';
				$serialNumber++;
			}
			$output .= '</table>';
			} else {
			$output .= '<p>No data found!</p>';
			}
		} else {
			$output .= '<p>The table housing_treasury_estate_mapping does not exist!</p>';
		}

		return $output;
	}
	
	require_once("update_flat_fetch_data.form.inc");
	require_once("update_flat_validate.form.inc");
	require_once("update_flat_add_data.form.inc");