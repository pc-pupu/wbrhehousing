<?php

/**
 * Implements hook_menu().
 */
function password_change_menu() {
  $items = array();

  // Define a page for changing the password.
  $items['password_change'] = array(
    'title' => 'Change User Password',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reset_password_form'),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function reset_password_form($form, &$form_state) {
    global $user;
    
    $form['old_password'] = array(
        '#type' => 'password',
        '#title' => t('Old Password'),
        '#attributes' => array('class' => array('form-control form-control-sm form-text')),
        '#required' => TRUE,
        '#prefix' => '<div class="row"><div class="col-md-4"><div class="form-floating">',
        '#suffix' => '</div></div>',
    );

    $form['new_password'] = array(
        '#type' => 'password',
        '#title' => t('New Password'),
        '#attributes' => array('class' => array('form-control form-control-sm form-text')),
        '#required' => TRUE,
        '#prefix' => '<div class="col-md-4"><div class="form-floating">',
        '#suffix' => '</div></div>',
    );

    $form['confirm_new_password'] = array(
        '#type' => 'password',
        '#title' => t('Confirm New Password'),
        '#attributes' => array('class' => array('form-control form-control-sm form-text')),
        '#required' => TRUE,
        '#prefix' => '<div class="col-md-4"><div class="form-floating">',
        '#suffix' => '</div></div></div>',
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Change Password'),
        '#prefix' => '<div class="col-md-4"><div class="form-floating">',
        '#suffix' => '</div></div></div>',
        '#attributes' => array('class' => array('text-centre btn bg-primary btn-sm rounded-pill text-white fw-bolder')),
    );

    return $form;
}

function reset_password_form_submit($form, &$form_state) {
    global $user;
    $old_password = $form_state['values']['old_password'];
    $new_password = $form_state['values']['new_password'];
    $confirm_new_password = $form_state['values']['confirm_new_password'];

    require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');

    if($user && !user_check_password($old_password, $user)){
        form_set_error('old_password', t('The current password is incorrect'));
    }else{
        if ($old_password === $new_password) {
            form_set_error('new_password', t('The new password cannot be the same as the old password'));
        }
    
        else if ($new_password !== $confirm_new_password) {
            form_set_error('confirm_new_password', t('The new passwords do not match'));
        }
    
        else if (strlen($new_password) < 6) {
            form_set_error('new_password', t('The new password must be at least 6 characters long.'));
        }
    
        else if (!preg_match('/[A-Z]/', $new_password)) {
            form_set_error('new_password', t('The new password must contain at least one uppercase letter.'));
        }
    
        else if (!preg_match('/[a-z]/', $new_password)) {
            form_set_error('new_password', t('The new password must contain at least one lowercase letter.'));
        }
    
        else if (!preg_match('/\d/', $new_password)) {
            form_set_error('new_password', t('The new password must contain at least one number.'));
        }
    
        else if (!preg_match('/[\W_]/', $new_password)) {
            form_set_error('new_password', t('The new password must contain at least one special character (e.g., @, #, $, etc.).'));
        }
        else{
            password_change_page($user->name,$new_password);
        }
    }  
}

function password_change_page($username,$new_password) {
  // Load the user by username.
  $user = user_load_by_name($username);
  if ($user) {
    // Set the new password.
    user_save($user, array('pass' => $new_password));

    // Provide feedback to the user.
    drupal_set_message(t('The password for %username has been changed.', array('%username' => $username)));
  } else {
    drupal_set_message(t('User %username not found.', array('%username' => $username)), 'error');
  }
}
