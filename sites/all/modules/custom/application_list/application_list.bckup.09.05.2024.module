<?php
	function application_list_menu() {
	
		$items['application-list'] = array(
		  'title' => 'Application List',	
		  'page callback' => 'application_list_page',
		  'file' => 'application_list_page.inc',
		  'access arguments' => array('administer Application List'),
		);
		
		$items['view-application/%'] = array(
		  'title' => 'View Application',	
		  'page callback' => 'view_application_page',
		  'page arguments' => array(1),
		  //'file' => 'view_application_page.inc',
		  'access arguments' => array('administer View Applicant Application'),
		);
		
		$items['application-pdf-gen/%/%'] = array(
		  'title' => 'View Application',	
		  'page callback' => 'application_pdf_gen',
		  'page arguments' => array(1,2),
		  'file' => 'application_pdf_gen.inc',
		  'access arguments' => array('administer Application PDF'),
		);
		
	//applicant application form upload
		$items['application_form_upload/%'] = array(
			'title' => 'Upload Applicaion Form',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('application_form_upload', 1),
			'file' => 'application_form_upload.inc',
			'access arguments' => array('administer Application List'),
		);
		
		return $items;
	}
  
  	
	function view_application_page($app_id = '') {
		global $user;
		$app_id = decrypt_url($app_id);
		if(is_numeric($app_id) && $app_id > 0) {
			$app_details = fetch_application_detail($app_id);
			$rowCountData = $app_details->rowCount();
			$app_data = $app_details->fetchObject();
			$output = array();
			
			if($app_data->uid == $user->uid) {
				if($rowCountData == 0){
					$output[] = false;
				}
				else{	
					$output[] = true;
					$output[] = $app_data;
					$output[] = check_application_entity(0,$app_id);
					$output[] = applicant_personal_info()->fetchObject();
				}
			}
		}
		
		return theme('view_application_template', array('output' => $output));
	}         

	function application_list_theme() {
		
		return array(
			'view_application_template' => array(
				'variables' => array('output' => NULL),
				// file name will be custom-page.tpl.php
				'template' => 'view_application',
			),
		);
	}
	
	function application_list_permission() {
	  return array(
		'administer Application List' => array(
		  'title' => t('administer Application List'),
		  'description' => t('Perform administer Application List.'),
		),
		'administer View Applicant Application' => array(
		  'title' => t('administer View Applicant Application'),
		  'description' => t('Perform administer View Applicant Application.'),
		),
		'administer Application PDF' => array(
		  'title' => t('administer Application PDF'),
		  'description' => t('Perform administer Application PDF.'),
		),
	  );
	}

	
	function check_application_entity($i,$online_application_id){
		global $entities;
		if($i == count($entities)){
			return false;
		}
		$entityList = $entities[$i];
		$entity = $entityList['entity'];
		$fields = $entityList['fields'];
		$expressions = $entityList['expressions'];
		$join = $entityList['join'];
		$entityType = $entityList['type'];
		$conditions = $entityList['condition'];
		$query = db_select($entity['table'], $entity['tableAlias']);
	
		foreach($join as $entityAlias => $joinPropertity ){
			$joinEntity = $joinPropertity['joinEntity'];
			$onClause = $joinPropertity['onClause'];
			$joinType = $joinPropertity['joinType'];
			$joinExpression = $entity['tableAlias'].'.'.$onClause['leftEntity'].' = '.$entityAlias.'.'.$onClause['rightEntity'];
			if($joinType == 'right'){
				$query->rightJoin($joinEntity,$entityAlias,$joinExpression);
			}else if($joinType == 'left'){
				$query->leftJoin($joinEntity,$entityAlias,$joinExpression);
			}else {
				$query->innerJoin($joinEntity,$entityAlias,$joinExpression);
			}
		
		}
		if(count($expressions) != 0){
			foreach($expressions as $entityAlias => $columnHeadFieldSet ){
				foreach($columnHeadFieldSet as $columnHead => $expression){
					
					$query->addExpression($expression[0], $expression[1]);
				}
				
			}
		}
		if(count($fields) != 0){
			foreach($fields as $entityAlias => $columnHeadFieldSet ){
				foreach($columnHeadFieldSet as $columnHead => $field){
					$query->addField($entityAlias, $field[0], $field[1]);
				}
				
			}
		}
	
		if(count($expressions) == 0 && count($fields) == 0) {
			$query->fields($entity['tableAlias']);
		}
		
		if(count($conditions) == 0){
			$query->condition($entity['tableAlias'].'.online_application_id', $online_application_id, '=');
		}
		else{

			$db_and = db_and();
			$db_and->condition($entity['tableAlias'].'.online_application_id', $online_application_id, '=');

			foreach($conditions as $tableAlias => $condition){
				foreach($condition as $expression){
					$db_and->condition($tableAlias.'.'.$expression['attribute'], $expression['value'], $expression['operator']);
				}
			}
			$query->condition($db_and);
		}

		$result = $query->execute();
		
		if($result->rowcount() > 0){
			$applicationData = $result->fetchObject();
			return array($entityList,$applicationData);
			
		}
		else{
			$i++;
			if($i < count($entities)){
				return check_application_entity($i,$online_application_id);
			}
		}
	}

	
	function fetch_application_detail($online_application_id = 0){
		global $user;
		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_district', 'hds',
		'hds.district_code = hd.district_code');
		$query->innerJoin('housing_pay_band_categories', 'hpb',
		'hpb.pay_band_id = haod.pay_band_id');
		$query->leftJoin('housing_new_allotment_application', 'hna',
		'hna.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_app_form', 'fm_app_form.fid = hoa.uploaded_app_form');
		$query->leftJoin('file_managed', 'fm',
		'fm.fid = hna.document');
		$query->leftJoin('file_managed', 'fm1',
		'fm1.fid = hna.extra_doc');
		$query->leftJoin('file_managed', 'fm2',
		'fm2.fid = hna.scaned_sign');
		$query->leftJoin('housing_flat_type', 'hft',
		'hpb.flat_type_id = hft.flat_type_id');
		/* $query->leftJoin('housing_flat_type', 'hft',
		'hna.flat_type_id = hft.flat_type_id'); */
		$query->leftJoin('housing_vs_application', 'hva',
			'hva.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_vs',
		'fm_vs.fid = hva.file_licence');
		$query->leftJoin('housing_cs_application', 'hca',
			'hca.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_cs',
		'fm_cs.fid = hca.file_licence');
		$query->leftJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_licence',
		'fm_licence.fid = hla.document');
		$query->addField('hft', 'flat_type_id');
		$query->addField('hft', 'flat_type');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hoa', 'application_no');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('hds', 'district_name');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		//$query->addField('hpb', 'payband');
		$query->addField('hpb', 'scale_from');
		$query->addField('hpb', 'scale_to');
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');
		$query->addField('hoa', 'uploaded_app_form');
		$query->addField('fm_app_form', 'uri', 'uri_app_form');
		$query->addField('fm', 'uri', 'uri_doc');
		$query->addField('fm2', 'uri', 'uri_scaned_sign');
		$query->addField('fm1', 'uri', 'uri_extra_doc');
		$query->addField('fm_vs', 'uri', 'uri_vs');
		$query->addField('fm_cs', 'uri', 'uri_cs');
		$query->addField('fm_licence', 'uri', 'uri_licence');
		$query->orderBy('hoa.online_application_id', 'ASC');
		if($online_application_id == 0){
			$query->condition('haod.uid', $user->uid, '=');
		}
		else{
			$query->condition('hoa.online_application_id', $online_application_id, '=');
		}
		//echo $query; die();
		return $query->execute();
	}
	

