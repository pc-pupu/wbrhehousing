<?php

//this page is for applicant login
	function application_list_menu() {
	
		$items['application-list'] = array(
		  'title' => 'Application List',	
		  'page callback' => 'application_list_page',
		  'file' => 'application_list_page.inc',
		  'access arguments' => array('administer Application List'),
		);
		
		$items['view-application/%'] = array(
		  'title' => 'View Application',	
		  'page callback' => 'view_application_page',
		  'page arguments' => array(1),
		  //'file' => 'view_application_page.inc',
		  'access arguments' => array('administer View Applicant Application'),
		);

		// 27-08-2024 start
		$items['generate-license'] = array(
			'title' => 'Generate License',	
			'page callback' => 'generate_license_application',
			//'file' => 'view_application_list_page.inc',
			'access arguments' => array('administer License Generation Application'),
		  );

		  $items['view-generated-license'] = array(
			'title' => 'View License List',	
			'page callback' => 'view_license_application',
			//'file' => 'view_application_list_page.inc',
			'access arguments' => array('administer License Generation Application'),
		  );

		  $items['view-flat-possession-taken-ddo'] = array(
			'title' => 'Applicant List With Flat Possesion',	
			'page callback' => 'ddo_flat_possession_taken_list',
			//'file' => 'view_application_list_page.inc',
			'access arguments' => array('administer License Generation Application'),
		  );
		//end

		// Done by Subham 07-01-2025
		$items['view-flat-released-ddo'] = array(
			'title' => 'Applicant List With Released Flats',	
			'page callback' => 'ddo_flat_released_list',
			'access arguments' => array('administer Flat Released List View'),
		);
		// End 07-01-2025
		
		$items['application-pdf-gen/%/%'] = array(
		  'title' => 'View Application',	
		  'page callback' => 'application_pdf_gen',
		  'page arguments' => array(1,2),
		  'file' => 'application_pdf_gen.inc',
		  'access arguments' => array('administer Application PDF'),
		);
		
	//applicant application form upload
		$items['application_form_upload/%'] = array(
			'title' => 'Upload Applicaion Form',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('application_form_upload', 1),
			'file' => 'application_form_upload.inc',
			'access arguments' => array('administer Application List'),
		);
		
		return $items;
	}
  
  	
	function view_application_page($app_id = '') {
		
		global $user;
		$app_id = decrypt_url($app_id);

		// echo $app_id;die;
		if(is_numeric($app_id) && $app_id > 0) {
			
			$app_details = fetch_application_detail($app_id);
			
			$rowCountData = $app_details->rowCount();
			$app_data = $app_details->fetchObject();
			// print_r($app_data);die;
			//debolina start
			$current_application_status_description=fetch_application_status_description($app_data->status);
			$fetch_application_estate_preference = fetch_application_estate_preference($app_id);	

			//debolina end
			
			$output = array();
			
			if($app_data->uid == $user->uid) {
				if($rowCountData == 0){
					$output[] = false;
				}
				else{	
					$output[] = true;
					$output[] = $app_data;
					$output[] = check_application_entity(0,$app_id);
					$output[] = applicant_personal_info()->fetchObject();
					
					//debolina start
					$output[] = $current_application_status_description;
					$output[] = $fetch_application_estate_preference;
					// print_r($output);die;
					//debolina end
				}
			}
		}

		// echo "<pre>";print_r($output);die;
		
		return theme('view_application_template', array('output' => $output));
	}         

	function application_list_theme() {
		
		return array(
			'view_application_template' => array(
				'variables' => array('output' => NULL),
				// file name will be custom-page.tpl.php
				'template' => 'view_application',
			),
			'license_generate_template' => array(
				'variables' => array('output' => NULL),
				// file name will be custom-page.tpl.php
				'template' => 'license_generate',
			),
		);
	}
	
	function application_list_permission() {
	  return array(
		'administer Application List' => array(
		  'title' => t('administer Application List'),
		  'description' => t('Perform administer Application List.'),
		),
		'administer View Applicant Application' => array(
		  'title' => t('administer View Applicant Application'),
		  'description' => t('Perform administer View Applicant Application.'),
		),
		'administer Application PDF' => array(
		  'title' => t('administer Application PDF'),
		  'description' => t('Perform administer Application PDF.'),
		),

		'administer License Generation Application' => array(
		  'title' => t('administer Application License Generation'),
		  'description' => t('Perform administer License Generate.'),
		),

		'administer Flat Released List View' => array(
		  'title' => t('administer Application Flat Released List View'),
		  'description' => t('Perform administer to see list of flat released.'),
		),
	  );
	}

	
	function check_application_entity($i,$online_application_id){
		global $entities;
		if($i == count($entities)){
			return false;
		}
		$entityList = $entities[$i];
		$entity = $entityList['entity'];
		$fields = $entityList['fields'];
		$expressions = $entityList['expressions'];
		$join = $entityList['join'];
		$entityType = $entityList['type'];
		$conditions = $entityList['condition'];
		$query = db_select($entity['table'], $entity['tableAlias']);
	
		foreach($join as $entityAlias => $joinPropertity ){
			$joinEntity = $joinPropertity['joinEntity'];
			$onClause = $joinPropertity['onClause'];
			$joinType = $joinPropertity['joinType'];
			$joinExpression = $entity['tableAlias'].'.'.$onClause['leftEntity'].' = '.$entityAlias.'.'.$onClause['rightEntity'];
			if($joinType == 'right'){
				$query->rightJoin($joinEntity,$entityAlias,$joinExpression);
			}else if($joinType == 'left'){
				$query->leftJoin($joinEntity,$entityAlias,$joinExpression);
			}else {
				$query->innerJoin($joinEntity,$entityAlias,$joinExpression);
			}
		
		}
		if(count($expressions) != 0){
			foreach($expressions as $entityAlias => $columnHeadFieldSet ){
				foreach($columnHeadFieldSet as $columnHead => $expression){
					
					$query->addExpression($expression[0], $expression[1]);
				}
				
			}
		}
		if(count($fields) != 0){
			foreach($fields as $entityAlias => $columnHeadFieldSet ){
				foreach($columnHeadFieldSet as $columnHead => $field){
					$query->addField($entityAlias, $field[0], $field[1]);
				}
				
			}
		}
	
		if(count($expressions) == 0 && count($fields) == 0) {
			$query->fields($entity['tableAlias']);
		}
		
		if(count($conditions) == 0){
			$query->condition($entity['tableAlias'].'.online_application_id', $online_application_id, '=');
		}
		else{

			$db_and = db_and();
			$db_and->condition($entity['tableAlias'].'.online_application_id', $online_application_id, '=');

			foreach($conditions as $tableAlias => $condition){
				foreach($condition as $expression){
					$db_and->condition($tableAlias.'.'.$expression['attribute'], $expression['value'], $expression['operator']);
				}
			}
			$query->condition($db_and);
		}

		$result = $query->execute();
		
		if($result->rowcount() > 0){
			$applicationData = $result->fetchObject();
			return array($entityList,$applicationData);
			
		}
		else{
			$i++;
			if($i < count($entities)){
				return check_application_entity($i,$online_application_id);
			}
		}
	}

	
	function fetch_application_detail($online_application_id = 0){

		global $user;
		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_district', 'hds',
		'hds.district_code = hd.district_code');
		$query->innerJoin('housing_pay_band_categories', 'hpb',
		'hpb.pay_band_id = haod.pay_band_id');
		$query->leftJoin('housing_new_allotment_application', 'hna',
		'hna.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_app_form', 'fm_app_form.fid = hoa.uploaded_app_form');
		$query->leftJoin('file_managed', 'fm',
		'fm.fid = hna.document');
		$query->leftJoin('file_managed', 'fm1',
		'fm1.fid = hna.extra_doc');
		$query->leftJoin('file_managed', 'fm2',
		'fm2.fid = hna.scaned_sign');
		$query->leftJoin('housing_flat_type', 'hft',
		'hpb.flat_type_id = hft.flat_type_id');
		/* $query->leftJoin('housing_flat_type', 'hft',
		'hna.flat_type_id = hft.flat_type_id'); */
		$query->leftJoin('housing_vs_application', 'hva',
			'hva.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_vs',
		'fm_vs.fid = hva.file_licence');
		$query->leftJoin('housing_cs_application', 'hca',
			'hca.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_cs',
		'fm_cs.fid = hca.file_licence');
		$query->leftJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_licence',
		'fm_licence.fid = hla.document');
		$query->leftJoin('housing_process_flow', 'hpf','hpf.online_application_id = hoa.online_application_id');  // debaleena 09-08-2024


		$query->addField('hft', 'flat_type_id');
		$query->addField('hft', 'flat_type');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hoa', 'application_no');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('hds', 'district_name');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		//$query->addField('hpb', 'payband');
		$query->addField('hpb', 'scale_from');
		$query->addField('hpb', 'scale_to');
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hpf', 'short_code');   // debaleena 09-08-2024
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');
		$query->addField('hoa', 'uploaded_app_form');
		$query->addField('fm_app_form', 'uri', 'uri_app_form');
		$query->addField('fm', 'uri', 'uri_doc');
		$query->addField('fm2', 'uri', 'uri_scaned_sign');
		$query->addField('fm1', 'uri', 'uri_extra_doc');
		$query->addField('fm_vs', 'uri', 'uri_vs');
		$query->addField('fm_cs', 'uri', 'uri_cs');
		$query->addField('fm_licence', 'uri', 'uri_licence');
		$query->orderBy('hoa.online_application_id', 'ASC');
		$query->condition('haod.is_active', '1', '='); // Done by Subham 25-11-2024
		if($online_application_id == 0){
			$query->condition('haod.uid', $user->uid, '=');
		}
		else{
			$query->condition('hoa.online_application_id', $online_application_id, '=');
		}
		// echo $query; die();
		// $result = $query->execute();  
		// $data = $result->fetchObject();

		// echo "<pre>";print_r($data);die;
		return $query->execute();
	}
	//debaleena start//
	function fetch_application_estate_preference($app_id = '')
	{
		$query = db_select('housing_new_application_estate_preferences', 'hnaep');
		$query->innerJoin('housing_estate', 'he','he.estate_id = hnaep.estate_id');
		$query->addField('he', 'estate_name');
		$query->addField('hnaep', 'preference_order');
		$query->condition('hnaep.online_application_id', $app_id, '=');
		$query->orderBy('hnaep.preference_order', 'ASC');
		$result = $query->execute();  
		$data = $result->fetchAll();
		return $data;
		//print_r($data);die;
	}
	//end//

	function fetch_generate_app_data(){
		$fetch_data = generate_license_application();


		print_r($fetch_data);die;
		// $output = array();
		// // $output['']

		// return theme('license_generate_template', array('output' => $output));
	}


	// 27-08-2024 start
	function generate_license_application(){
		global $user;

		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_applicant', 'ha',
		'ha.housing_applicant_id = haod.housing_applicant_id');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		
		$query->innerJoin('housing_allotment_status_master', 'hsm','hsm.short_code = hoa.status');
		
		$query->addField('ha', 'applicant_name');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hoa', 'application_no');
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');//change in case of verified,rejected
		$query->addField('hoa', 'computer_serial_no');
		
		$query->addField('hoa', 'is_backlog_applicant');
		$query->addField('hoa', 'computer_serial_no');
		$query->addField('hoa', 'uploaded_app_form');
		//$query->addField('fm_app_form', 'uri', 'uri_app_form');

		$query->condition('hoa.status','housingapprover_approved_2');
		
		
		$result = $query->execute();
		

		$header = array(
			'applicant_name' => array(
				'data' => 'Name'
			) ,
			'application_no' => array(
				'data' => 'Application No.',
				'width'=>'20%'
			) ,
			'license_generate' => array(
				'data' => 'License generation',
				'width'=>'20%'
			) 
		);

		$rows =array();
		$output = '';
		while($data = $result->fetchObject()) {
			$fields = array();
			$msg = 'Are you sure you want to generate License for Application No.=' .$data->application_no.'?';
			//echo $aa;die;
			$onclick2 = "return confirm('$msg' )";

			$fields[] = $data->applicant_name;
			$fields[] = $data->application_no;
			$fields[] = l(
							'<span class="text-danger" style="font-size:20px"></span><span class="btn bg-success btn-sm text-white rounded" style="font-size:12px" > Generate License</span>' ,
							'generate-license/'.encrypt_url($data->online_application_id).'/'.'verified-list'.'/'.encrypt_url($data->status),
								array('html'=>TRUE, 'attributes' => array('onclick' => $onclick2))
							);
			$rows[] = $fields;
		}

		

		$variables = array(
			'attributes' => array('class'=>array('table table-list table-striped')),
			'header' => $header,
			'rows' => $rows,
			'sticky' => true,
			'empty' => t("No data found!") // The message to be displayed if table is empty
		  );
  		//end
		//sd turned off 21-06-2024
		if(count($rows) > 0) {
			// Render using Drupal's render API.
			$build['datatable'] = array(
			  '#theme' => 'datatable',
			  '#header' => $header,
			  '#rows' => $rows,
			  '#attributes' => array(),
			);
			
			// Or, render using a theme function.
			$variables = array(
			  'attributes' => array('class'=>array('table table-list table-striped')),
			  'header' => $header,
			  'rows' => $rows,
			);
			
			$output = theme('datatable', $variables);
		}
		else {
			$output = '<div>
							<table class="datatable_no_data_found table table-list">
								<tr class="tr_no_data_found">
									<th class="th_no_data_found"></th>
								</tr>
								<tr class="tr_no_data_found">
									<td class="td_no_data_found">No data found!</td>
								</tr>
							</table>
						</div>';
		}
	
	return $output;

	}

	function view_license_application(){
		global $user,$user_role;

		$query = db_select('housing_applicant_official_detail', 'haod');
		//$query->innerJoin('housing_applicant', 'ha','ha.uid = haod.uid');
		$query->innerJoin('housing_applicant', 'ha','ha.housing_applicant_id = haod.housing_applicant_id');  //12--12-2024
		$query->innerJoin('housing_online_application', 'hoa','hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		//$query->innerJoin('housing_license_application', 'hla','hla.online_application_id = hoa.online_application_id');
		//$query->innerJoin('housing_occupant_license', 'hol','hol.license_application_id = hla.license_application_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		
		$query->innerJoin('housing_allotment_status_master', 'hsm','hsm.short_code = hoa.status');
		
		$query->addField('ha', 'applicant_name');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hoa', 'application_no');
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');//change in case of verified,rejected
		$query->addField('hoa', 'computer_serial_no');
		
		$query->addField('hoa', 'is_backlog_applicant');
		$query->addField('hoa', 'computer_serial_no');
		$query->addField('hoa', 'uploaded_app_form');

		//$query->addField('hol', 'license_expiry_date');
		//$query->addField('fm_app_form', 'uri', 'uri_app_form');

		$query->condition('hoa.status',array('license_generate','flat_possession_taken','license_extended','flat_released'));

		if($user_role == 11){
			$query->condition('hd.ddo_code',$user->name);  //12-12-2024
		}
		
		
		
		$result = $query->execute();
		
		$header['applicant_name'] = array('data' => 'Applicant Name');
		$header['application_no'] = array('data' => 'Application No.');
		$header['download_license'] = array('data' => 'Download License', 'width'=>'20%');

		
		$rows =array();
		$output = '';
		
		while($data = $result->fetchObject()) {
			$fields = array();
			$fields[] = $data->applicant_name;
			$fields[] = $data->application_no;	
			
			
			
			$fields[] = l(
					'<span class="btn bg-dark btn-sm fa fa-download text-white rounded" style="font-size:12px" ></span>' ,
					'download_licence_pdf/'.encrypt_url($data->online_application_id).'/', //
					array('html'=>TRUE,'attributes'=> array('target' => '_blank'))
				);
			$rows[] = $fields;
		}

		

		$variables = array(
			'attributes' => array('class'=>array('table table-list table-striped')),
			'header' => $header,
			'rows' => $rows,
			'sticky' => true,
			'empty' => t("No data found!") // The message to be displayed if table is empty
		  );
  		//end
		//sd turned off 21-06-2024
		if(count($rows) > 0) {
			// Render using Drupal's render API.
			$build['datatable'] = array(
			  '#theme' => 'datatable',
			  '#header' => $header,
			  '#rows' => $rows,
			  '#attributes' => array(),
			);
			
			// Or, render using a theme function.
			$variables = array(
			  'attributes' => array('class'=>array('table table-list table-striped')),
			  'header' => $header,
			  'rows' => $rows,
			);
			
			$output = theme('datatable', $variables);
		}
		else {
			$output = '<div>
							<table class="datatable_no_data_found table table-list">
								<tr class="tr_no_data_found">
									<th class="th_no_data_found"></th>
								</tr>
								<tr class="tr_no_data_found">
									<td class="td_no_data_found">No data found!</td>
								</tr>
							</table>
						</div>';
		}
	
	return $output;

	}

	function ddo_flat_possession_taken_list(){
		global $user,$user_role;

		$query = db_select('housing_applicant_official_detail', 'haod');
		//$query->innerJoin('housing_applicant', 'ha','ha.uid = haod.uid');
		$query->innerJoin('housing_applicant', 'ha','ha.housing_applicant_id = haod.housing_applicant_id');  //12--12-2024
		$query->innerJoin('housing_online_application', 'hoa','hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_license_application', 'hla','hla.online_application_id = hoa.online_application_id');
		$query->innerJoin('housing_occupant_license', 'hol','hol.license_application_id = hla.license_application_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_allotment_status_master', 'hsm','hsm.short_code = hoa.status');

		$query->addField('hoa', 'online_application_id');
		$query->addField('ha', 'applicant_name');
		$query->addField('hoa', 'application_no');
		$query->addField('hol', 'possession_date');
		

		$query->condition('hoa.status','flat_possession_taken');

		if($user_role == 11){
			$query->condition('hd.ddo_code',$user->name);  //12-12-2024
		}
		
		
		
		$result = $query->execute();
		
		$header['applicant_name'] = array('data' => 'Applicant Name');
		$header['application_no'] = array('data' => 'Application No.');
		$header['Possession_date'] = array('data' => 'Possession Date');
		$header['download_license'] = array('data' => 'Download License', 'width'=>'20%');

		
		$rows =array();
		$output = '';
		
		while($data = $result->fetchObject()) {
			$fields = array();
			$fields[] = $data->applicant_name;
			$fields[] = $data->application_no;
			$fields[] = $data->possession_date;	
			
			
			
			$fields[] = l(
					'<span class="btn bg-dark btn-sm fa fa-download text-white rounded" style="font-size:12px" ></span>' ,
					'download_licence_pdf/'.encrypt_url($data->online_application_id).'/', //
					array('html'=>TRUE,'attributes'=> array('target' => '_blank'))
				);
			$rows[] = $fields;
		}

		

		$variables = array(
			'attributes' => array('class'=>array('table table-list table-striped')),
			'header' => $header,
			'rows' => $rows,
			'sticky' => true,
			'empty' => t("No data found!") // The message to be displayed if table is empty
		  );
  		//end
		//sd turned off 21-06-2024
		if(count($rows) > 0) {
			// Render using Drupal's render API.
			$build['datatable'] = array(
			  '#theme' => 'datatable',
			  '#header' => $header,
			  '#rows' => $rows,
			  '#attributes' => array(),
			);
			
			// Or, render using a theme function.
			$variables = array(
			  'attributes' => array('class'=>array('table table-list table-striped')),
			  'header' => $header,
			  'rows' => $rows,
			);
			
			$output = theme('datatable', $variables);
		}
		else {
			$output = '<div>
							<table class="datatable_no_data_found table table-list">
								<tr class="tr_no_data_found">
									<th class="th_no_data_found"></th>
								</tr>
								<tr class="tr_no_data_found">
									<td class="td_no_data_found">No data found!</td>
								</tr>
							</table>
						</div>';
		}
	
	return $output;

	}

	/* Done by Subham 07-01-2025*/
	function ddo_flat_released_list(){
		global $user,$user_role;

		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_applicant', 'ha','ha.housing_applicant_id = haod.housing_applicant_id');
		$query->innerJoin('housing_online_application', 'hoa','hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_license_application', 'hla','hla.online_application_id = hoa.online_application_id');
		$query->innerJoin('housing_occupant_license', 'hol','hol.license_application_id = hla.license_application_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_allotment_status_master', 'hsm','hsm.short_code = hoa.status');

		$query->addField('hoa', 'online_application_id');
		$query->addField('ha', 'applicant_name');
		$query->addField('hoa', 'application_no');
		$query->addField('hol', 'possession_date');
		

		$query->condition('hoa.status','flat_released');

		if($user_role == 11){
			$query->condition('hd.ddo_code',$user->name);
		}
		
		
		
		$result = $query->execute();
		
		$header['applicant_name'] = array('data' => 'Applicant Name');
		$header['application_no'] = array('data' => 'Application No.');
		$header['Possession_date'] = array('data' => 'Possession Date');
		$header['download_license'] = array('data' => 'Download License', 'width'=>'20%');

		
		$rows =array();
		$output = '';
		
		while($data = $result->fetchObject()) {
			$fields = array();
			$fields[] = $data->applicant_name;
			$fields[] = $data->application_no;
			$fields[] = $data->possession_date;	
			
			
			
			$fields[] = l(
					'<span class="btn bg-dark btn-sm fa fa-download text-white rounded" style="font-size:12px" ></span>' ,
					'download_licence_pdf/'.encrypt_url($data->online_application_id).'/', //
					array('html'=>TRUE,'attributes'=> array('target' => '_blank'))
				);
			$rows[] = $fields;
		}

		

		$variables = array(
			'attributes' => array('class'=>array('table table-list table-striped')),
			'header' => $header,
			'rows' => $rows,
			'sticky' => true,
			'empty' => t("No data found!") // The message to be displayed if table is empty
		  );

		if(count($rows) > 0) {
			// Render using Drupal's render API.
			$build['datatable'] = array(
			  '#theme' => 'datatable',
			  '#header' => $header,
			  '#rows' => $rows,
			  '#attributes' => array(),
			);
			
			// Or, render using a theme function.
			$variables = array(
			  'attributes' => array('class'=>array('table table-list table-striped')),
			  'header' => $header,
			  'rows' => $rows,
			);
			
			$output = theme('datatable', $variables);
		}
		else {
			$output = '<div>
							<table class="datatable_no_data_found table table-list">
								<tr class="tr_no_data_found">
									<th class="th_no_data_found"></th>
								</tr>
								<tr class="tr_no_data_found">
									<td class="td_no_data_found">No data found!</td>
								</tr>
							</table>
						</div>';
		}
	
	return $output;

	}
	

	

	
	

